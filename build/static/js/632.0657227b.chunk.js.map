{"version":3,"file":"static/js/632.0657227b.chunk.js","mappings":"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","sources":["../node_modules/@uniswap/widgets/node_modules/ajv/lib/ajv.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/codegen/code.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/codegen/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/codegen/scope.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/errors.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/names.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/ref_error.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/resolve.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/rules.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/util.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/applicability.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/boolSchema.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/dataType.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/defaults.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/keyword.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/compile/validate/subschema.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/core.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/runtime/equal.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/runtime/ucs2length.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/runtime/uri.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/runtime/validation_error.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/allOf.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/anyOf.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/contains.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/dependencies.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/if.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/items.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/items2020.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/not.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/oneOf.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/properties.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/applicator/thenElse.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/code.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/core/id.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/core/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/core/ref.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/discriminator/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/discriminator/types.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/draft7.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/format/format.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/format/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/metadata.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/const.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/enum.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/index.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/limitItems.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/limitLength.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/limitNumber.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/limitProperties.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/multipleOf.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/pattern.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/required.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts","../node_modules/@uniswap/widgets/node_modules/json-schema-traverse/index.js","../node_modules/fast-deep-equal/index.js","../node_modules/uri-js/src/util.ts","../node_modules/uri-js/src/regexps-uri.ts","../node_modules/uri-js/src/regexps-iri.ts","../node_modules/uri-js/node_modules/punycode/punycode.es6.js","../node_modules/uri-js/src/uri.ts","../node_modules/uri-js/src/schemes/http.ts","../node_modules/uri-js/src/schemes/https.ts","../node_modules/uri-js/src/schemes/ws.ts","../node_modules/uri-js/src/schemes/wss.ts","../node_modules/uri-js/src/schemes/mailto.ts","../node_modules/uri-js/src/schemes/urn.ts","../node_modules/uri-js/src/schemes/urn-uuid.ts","../node_modules/uri-js/src/index.ts","../node_modules/@babel/runtime/helpers/taggedTemplateLiteral.js"],"sourcesContent":["import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nexport class Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nmodule.exports.Ajv = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n","export abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n","import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private rhs?: SafeExpr\n  ) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(\n    readonly lhs: Code,\n    public rhs: SafeExpr,\n    private readonly sideEffects?: boolean\n  ) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(\n    lhs: Code,\n    private readonly op: Code,\n    rhs: SafeExpr,\n    sideEffects?: boolean\n  ) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(\n    private condition: Code | boolean,\n    nodes?: ChildNode[]\n  ) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(\n    public name: Name,\n    public args: Code,\n    public async?: boolean\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n","import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n","import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n","import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport * as URI from \"uri-js\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URI.URIComponents,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n","import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n","import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n","import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponents} from \"uri-js\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponents): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let innerBaseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") innerBaseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = innerBaseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(innerBaseId ? _resolve(innerBaseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n","import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = (typeof _jsonTypes)[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n","import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n","import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n","import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n","import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n","import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n","import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n","import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n","import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n","export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n","// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n","// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n","import * as uri from \"uri-js\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n","import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n","import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n","import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n","import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n","import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch?.$ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n","import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n","import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n","import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n","import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n","import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}","import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n","import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n","/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;","import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n","function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nmodule.exports = _taggedTemplateLiteral, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["core_1","require","draft7_1","discriminator_1","draft7MetaSchema","META_SUPPORT_DATA","META_SCHEMA_ID","Ajv","default","_addVocabularies","super","forEach","v","this","addVocabulary","opts","discriminator","addKeyword","_addDefaultMetaSchema","meta","metaSchema","$data","$dataMetaSchema","addMetaSchema","refs","defaultMeta","getSchema","undefined","exports","module","Object","defineProperty","value","validate_1","enumerable","get","KeywordCxt","codegen_1","_","str","stringify","nil","Name","CodeGen","validation_error_1","ref_error_1","_CodeOrName","constructor","s","IDENTIFIER","test","Error","toString","emptyStr","names","_Code","code","_items","length","item","_a","_str","reduce","c","concat","_names","strs","i","_len","arguments","args","Array","_key","addCodeArg","push","plus","expr","safeStringify","_len2","_key2","res","mergeExprItems","splice","optimize","arg","x","isArray","join","a","b","slice","JSON","replace","c1","c2","_templateObject","_taggedTemplateLiteral","key","_templateObject2","rx","code_1","scope_1","code_2","strConcat","getProperty","regexpCode","scope_2","Scope","ValueScope","ValueScopeName","varKinds","GT","GTE","LT","LTE","EQ","NEQ","NOT","OR","AND","ADD","Node","optimizeNodes","optimizeNames","_constants","Def","varKind","name","rhs","render","_ref","es5","_n","var","constants","optimizeExpr","Assign","lhs","sideEffects","_ref2","addExprNames","AssignOp","op","_ref3","Label","label","_ref4","Break","_ref5","Throw","error","_ref6","AnyCode","_ref7","ParentNode","nodes","n","subtractNames","addNames","BlockNode","Root","Else","kind","If","condition","else","cond","e","ns","not","For","ForLoop","iteration","ForRange","from","to","ForIter","loop","iterable","Func","async","_async","Return","Try","catch","finally","_b","Catch","Finally","replaceName","some","items","_templateObject4","par","extScope","_values","_blockStarts","lines","_extScope","_scope","parent","_nodes","_root","prefix","scopeName","scopeValue","prefixOrName","Set","add","getScopeValue","keyOrRef","getValue","scopeRefs","scopeCode","_def","nameOrPrefix","constant","toName","_leafNode","const","_constant","let","assign","operators","object","keyValues","if","thenBody","elseBody","_blockNode","endIf","elseIf","_elseNode","_endBlockNode","_for","node","forBody","endFor","for","forRange","forOf","arr","forIn","obj","ownProperties","_templateObject3","break","return","try","tryBody","catchCode","finallyCode","_currNode","throw","block","body","nodeCount","endBlock","len","pop","toClose","func","funcBody","endFunc","N1","N2","andCode","mappend","orCode","y","_templateObject5","_templateObject6","_len3","_key3","ValueError","UsedValueState","prefixes","_prefixes","_parent","_newName","ng","_nameGroup","index","has","nameStr","setValue","property","itemIndex","scopePath","line","scope","ref","valueKey","vs","_name","Map","set","values","_reduceValues","usedValues","getCode","valueCode","nameSet","Started","def","Completed","util_1","names_1","addError","gen","errObj","err","_templateObject14","vErrors","_templateObject15","_templateObject16","_templateObject17","errors","returnErrors","it","errs","validateName","schemaEnv","$async","_templateObject18","ValidationError","_templateObject19","message","keyword","schemaType","cxt","keywordError","errorPaths","overrideAllErrors","compositeRule","allErrors","errorObjectCode","errsCount","schemaValue","data","_templateObject7","_templateObject8","_templateObject9","instancePath","errorPath","_templateObject10","_templateObject11","errSchemaPath","verbose","_templateObject12","_templateObject13","E","schemaPath","params","propertyName","schema","parentSchema","createErrors","_templateObject20","errorInstancePath","errorSchemaPath","_ref8","topSchemaRef","_templateObject24","messages","_templateObject25","extraErrorProps","errorObject","instPath","_templateObject21","getErrorPath","Type","Str","schPath","_templateObject22","_templateObject23","resolve_1","SchemaEnv","env","dynamicAnchors","schemaId","root","baseId","normalizeId","localRefs","compileSchema","sch","_sch","getCompilingSchema","call","rootId","getFullPath","uriResolver","_ValidationError","schemaCxt","parentData","parentDataProperty","dataNames","dataPathArr","dataLevel","dataTypes","definedProperties","source","jtd","self","sourceCode","_compilations","validateFunctionCode","validateCode","process","validate","Function","makeValidate","scopeValues","unevaluated","props","evaluated","dynamicProps","dynamicItems","logger","delete","inlineOrCompile","inlineRef","inlineRefs","schEnv","s2","s1","resolve","schemas","resolveSchema","p","parse","refPath","_getFullPath","keys","getJsonPointer","id","schOrRef","schId","resolveUrl","schOrFunc","PREVENT_SCOPE_CHANGE","parsedRef","fragment","part","split","partSchema","unescapeFragment","$ref","schemaHasRulesButRef","RULES","valCxt","rootData","json","jsonPos","jsonLen","jsonPart","MissingRefError","resolver","msg","missingRef","missingSchema","equal","traverse","SIMPLE_INLINED","limit","hasRef","countKeys","REF_KEYWORDS","count","Infinity","eachItem","serialize","TRAILING_SLASH_HASH","ANCHOR","baseIds","pathPrefix","schemaRefs","allKeys","jsonPtr","parentJsonPtr","fullPath","innerBaseId","addRef","_resolve","ambiguos","checkAmbiguosRef","addAnchor","anchor","$anchor","$dynamicAnchor","sch1","sch2","jsonTypes","groups","number","type","rules","string","array","types","integer","boolean","null","post","all","keywords","checkUnknownRules","strictSchema","checkStrictMode","schemaHasRules","escapeJsonPointer","unescapeJsonPointer","makeMergeEvaluated","mergeNames","mergeToName","mergeValues","resultToName","evaluatedPropsToName","ps","setEvaluated","hash","decodeURIComponent","encodeURIComponent","xs","f","Math","max","snippets","mode","warn","dataProp","dataPropType","jsPropertySyntax","isNumber","Num","shouldUseGroup","group","rule","shouldUseRule","definition","implements","kwd","errors_1","boolError","falseSchemaError","schemaCode","reportError","valid","rules_1","applicability_1","DataType","getJSONTypes","ts","every","isJSONType","includes","nullable","coerceTo","coerceTypes","filter","t","COERCIBLE","coerceToTypes","checkTypes","schemaHasRulesForType","wrongType","checkDataTypes","strictNumbers","Wrong","dataType","coerced","coerceSpecificType","reportTypeError","assignParentData","coerceData","checkDataType","strictNums","correct","Correct","numCond","_templateObject26","_templateObject27","_cond","and","_templateObject28","_templateObject29","toHash","notObj","_templateObject30","_templateObject31","typeError","_templateObject32","_templateObject33","schemaRefOrVal","getTypeErrorContext","assignDefault","prop","defaultValue","childData","useDefaults","ty","properties","boolSchema_1","dataType_1","dataType_2","defaults_1","keyword_1","subschema_1","validateFunction","funcSourceUrl","dynamicRef","destructureValCxtES5","destructureValCxt","subschemaCode","isSchemaObj","checkKeywords","schemaCxtHasRules","$comment","commentKeyword","updateContext","checkAsyncSchema","typeAndKeywords","subSchemaObjCode","boolOrEmptySchema","ignoreKeywordsWithRef","checkRefsAndKeywords","schemaKeywords","getSchemaTypes","coerceAndCheckDataType","rootName","typeErrors","groupKeywords","iterateKeywords","strictTypes","includesType","strictTypesError","withTypes","narrowSchemaTypes","checkContextTypes","allowUnionTypes","checkMultipleTypes","hasApplicableType","checkKeywordTypes","checkStrictTypes","keywordCode","assignDefaults","schTs","kwdT","checkNoDefault","resetEvaluated","assignEvaluated","returnResults","topSchemaObjCode","topBoolOrEmptySchema","validateKeywordUsage","getData","validSchemaType","allowUndefined","trackErrors","result","successAction","failAction","failResult","pass","fail","fail$data","_templateObject34","or","invalid$data","append","errorParams","setParams","_error","reportExtraError","$dataError","keyword$DataError","reset","resetErrorsCount","ok","block$data","codeBlock","$dataValid","check$data","_templateObject35","validateSchema","st","_templateObject36","wrong$DataType","validateSchemaRef","_templateObject37","invalid$DataSchema","subschema","appl","getSubschema","extendSubschemaData","extendSubschemaMode","nextContext","mergeEvaluated","mergeValidEvaluated","ruleType","funcKeywordCode","macroKeywordCode","compile","JSON_POINTER","RELATIVE_JSON_POINTER","jsonPointer","matches","exec","up","errorMsg","segments","segment","_templateObject38","_templateObject39","pointerType","modifyData","useKeyword","macroSchema","macro","schemaRef","checkAsyncKeyword","validateRef","assignValid","_await","passCxt","passContext","passSchema","callValidateCode","modifying","reportErrs","ruleErrs","validateAsync","validateErrs","validateSync","extendErrors","addErrs","deps","dependencies","prototype","hasOwnProperty","errorsText","schemaProp","escapeFragment","dpType","dataContextProps","_nextData","jtdDiscriminator","jtdMetadata","compile_1","codegen_2","$dataRefSchema","uri_1","defaultRegExp","flags","RegExp","META_IGNORE_OPTIONS","EXT_SCOPE_NAMES","removedOptions","errorDataPath","format","jsonPointers","extendRefs","missingRefs","processCode","strictDefaults","strictKeywords","uniqueItems","unknownFormats","cache","ajvErrors","deprecatedOptions","unicode","requiredOptions","o","strict","_optz","regExp","_c","_d","_f","_e","_h","_g","_k","_j","strictTuples","_m","_l","strictRequired","_p","_o","loopRequired","_q","loopEnum","_r","_s","_t","_u","_v","addUsedSchema","_w","_x","validateFormats","_y","unicodeRegExp","_z","int32range","_0","formats","_loading","_cache","noLogs","console","log","getLogger","formatOpt","getRules","checkOptions","_metaOpts","getMetaSchemaOptions","addInitialFormats","addInitialKeywords","addInitialSchemas","_dataRefSchema","$id","schemaKeyRef","_meta","_addSchema","_compileSchemaEnv","compileAsync","loadSchema","runCompileAsync","_schema","loadMetaSchema","$schema","_compileAsync","checkLoaded","loadMissingSchema","_loadSchema","addSchema","_validateSchema","_checkUnique","throwOrLogError","keyRef","getSchEnv","removeSchema","_removeAllSchemas","clear","cacheKey","definitions","kwdOrDef","checkKeyword","addRule","keywordMetaschema","k","getKeyword","removeKeyword","findIndex","addFormat","separator","dataVar","map","text","keywordsJsonPointers","seg","schemaOrData","regex","getSchemaRefs","startsWith","_compileMetaSchema","currentOpts","checkOpts","options","opt","optsSchemas","defs","metaOpts","KEYWORD_NAME","ruleGroup","find","before","addBeforeRule","_rule","$dataRef","anyOf","ucs2length","pos","charCodeAt","uri","ajv","validation","validateAdditionalItems","alwaysValidSchema","validateItems","additionalProperty","removeAdditional","allSchemaProperties","patProps","patternProperties","deleteAdditional","additionalPropertyCode","applyAdditionalSchema","definedProp","propsSchema","isOwnProperty","usePattern","isAdditional","schCxt","validateUnion","min","minContains","maxContains","next","validateItemsWithCount","schValid","checkLimits","_valid","depsCount","property_ies","missingProperty","propDeps","schDeps","propertyDeps","schemaDeps","splitDependencies","validatePropertyDeps","validateSchemaDeps","missing","hasProperty","propertyInData","depProp","checkReportMissingProp","checkMissingProp","reportMissingProp","ifClause","then","hasThen","hasSchema","hasElse","validateIf","validateClause","additionalItems_1","prefixItems_1","items_1","items2020_1","contains_1","dependencies_1","propertyNames_1","additionalProperties_1","properties_1","patternProperties_1","not_1","anyOf_1","oneOf_1","allOf_1","if_1","thenElse_1","draft2020","applicator","validateTuple","validateArray","extraItems","schArr","l","fullTuple","minItems","maxItems","checkStrictTuple","prefixItems","passing","util_2","patterns","alwaysValidPatterns","checkProperties","allowMatchingProperties","checkMatchingProperties","pat","validateProperties","alwaysValid","validatePatternProperties","additionalProperties","allProps","hasDefault","applyPropertySchema","hasPropFunc","noPropertyInData","schemaMap","context","dataAndSchema","newRegExp","pattern","u","useFunc","validArr","notValid","id_1","ref_1","core","callRef","callRootRef","schOrEnv","resolveRef","getValidate","callValidate","schName","inlineRefSchema","addErrorsFrom","addEvaluatedFrom","schEvaluated","callAsyncRef","types_1","discrError","tagName","DiscrError","Tag","tag","oneOf","mapping","applyTagSchema","oneOfMapping","topRequired","hasRequired","tagRequired","propSch","addMappings","required","addMapping","enum","tagValue","getMapping","Mapping","validateMapping","validation_1","applicator_1","format_1","metadata_1","draft7Vocabularies","metadataVocabulary","contentVocabulary","fmts","fDef","fType","callFormat","validData","invalidFmt","validate$DataFormat","formatDef","unknownMsg","unknownFormat","fmtType","fmtRef","fmtDef","fmt","getFormat","validCondition","validateFormat","equal_1","useLoop","eql","getEql","vSchema","equalCode","limitNumber_1","multipleOf_1","limitLength_1","pattern_1","limitProperties_1","required_1","limitItems_1","uniqueItems_1","const_1","enum_1","comp","ucs2length_1","ops","KWDs","maximum","okStr","minimum","exclusiveMaximum","exclusiveMinimum","prec","multipleOfPrecision","invalid","loopAllRequired","allErrorsMode","loopUntilMissing","exitOnErrorMode","requiredKey","j","itemTypes","loopN","indices","loopN2","outer","cb","_traverse","pre","rootSchema","parentKeyword","keyIndex","arrayKeywords","propsKeywords","skipKeywords","additionalItems","contains","propertyNames","allOf","$defs","multipleOf","maxLength","minLength","maxProperties","minProperties","valueOf","merge","sets","xl","subexp","typeOf","shift","toLowerCase","toUpperCase","toArray","setInterval","target","buildExps","isIRI","ALPHA$$","DIGIT$$","HEXDIG$$","PCT_ENCODED$","SUB_DELIMS$$","RESERVED$$","SCHEME$","USERINFO$","UNRESERVED$$","DEC_OCTET_RELAXED$","H16$","LS32$","IPV4ADDRESS$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","ZONEID$","IPV6ADDRESS$","IP_LITERAL$","IPV6ADDRZ_RELAXED$","IPVFUTURE$","HOST$","REG_NAME$","PORT$","AUTHORITY$","PCHAR$","SEGMENT$","SEGMENT_NZ$","SEGMENT_NZ_NC$","PATH_ABEMPTY$","PATH_ABSOLUTE$","QUERY$","PATH_NOSCHEME$","PATH_ROOTLESS$","PATH_EMPTY$","IPRIVATE$$","FRAGMENT$","HIER_PART$","URI$","RELATIVE_PART$","RELATIVE$","URI_PROTOCOL","IRI_PROTOCOL","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","baseMinusTMin","floor","stringFromCharCode","String","fromCharCode","error$1","RangeError","fn","mapDomain","parts","ucs2decode","output","counter","extra","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","decode","input","inputLength","bias","basic","lastIndexOf","oldi","w","baseMinusT","out","fromCodePoint","apply","encode","_step","Symbol","iterator","_iteratorNormalCompletion","_iterator","done","_currentValue2","basicLength","handledCPCount","m","_step2","_iteratorNormalCompletion2","_iterator2","currentValue","handledCPCountPlusOne","_step3","_iteratorNormalCompletion3","_iterator3","_currentValue","q","qMinusT","toUnicode","toASCII","punycode","toConsumableArray","SCHEMES","pctEncChar","chr","pctDecChars","newStr","il","parseInt","substr","c3","_normalizeComponentEncoding","components","protocol","decodeUnreserved","decStr","match","UNRESERVED","scheme","PCT_ENCODED","NOT_SCHEME","userinfo","NOT_USERINFO","host","NOT_HOST","path","NOT_PATH","NOT_PATH_NOSCHEME","query","NOT_QUERY","NOT_FRAGMENT","_stripLeadingZeros","_normalizeIPv4","IPV4ADDRESS","address","_normalizeIPv6","IPV6ADDRESS","_matches2","zone","reverse","last","_address$toLowerCase$2","first","firstFields","lastFields","isLastFieldIPv4Address","fieldCount","lastFieldsStart","fields","longestZeroFields","acc","field","lastLongest","sort","newHost","newFirst","newLast","URI_PARSE","NO_MATCH_IS_UNDEFINED","uriString","iri","reference","port","isNaN","indexOf","schemeHandler","unicodeSupport","domainHost","_recomposeAuthority","uriTokens","$1","$2","RDS1","RDS2","RDS3","RDS5","removeDotSegments","im","authority","charAt","absolutePath","resolveComponents","relative","tolerant","baseURI","relativeURI","schemelessOptions","normalize","uriA","uriB","escapeComponent","ESCAPE","unescapeComponent","handler","secure","handler$1","isSecure","wsComponents","handler$2","resourceName","_wsComponents$resourc2","handler$3","O","ATEXT$$","VCHAR$$","SOME_DELIMS$$","NOT_LOCAL_PART","NOT_HFNAME","NOT_HFVALUE","handler$4","mailtoComponents","unknownHeaders","headers","hfields","hfield","toAddrs","_xl","subject","_x2","_xl2","addr","toAddr","atIdx","localPart","domain","URN_PARSE","handler$5","urnComponents","nid","nss","urnScheme","uriComponents","UUID","handler$6","uuidComponents","uuid","strings","raw","freeze","defineProperties","__esModule"],"sourceRoot":""}