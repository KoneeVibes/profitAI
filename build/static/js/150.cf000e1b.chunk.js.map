{"version":3,"file":"static/js/150.cf000e1b.chunk.js","mappings":"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","sources":["../node_modules/@uniswap/widgets/dist/validateTokenList-a514c118.js","../node_modules/@uniswap/widgets/node_modules/ajv-formats/src/formats.ts","../node_modules/@uniswap/widgets/node_modules/ajv/lib/runtime/ucs2length.ts"],"sourcesContent":["import _typeof from '@babel/runtime/helpers/typeof';\n\nvar validate = validate10;\n\nvar func2 = require(\"ajv/dist/runtime/ucs2length\").default;\n\nvar pattern0 = new RegExp(\"^[\\\\w ]+$\", \"u\");\nvar pattern4 = new RegExp(\"^[\\\\w]+$\", \"u\");\nvar pattern10 = new RegExp(\"^[ \\\\w]+$\", \"u\");\nvar pattern11 = new RegExp(\"^[ \\\\w\\\\.,:]+$\", \"u\");\n\nvar formats0 = require(\"ajv-formats/dist/formats\").fullFormats[\"date-time\"];\n\nvar formats2 = require(\"ajv-formats/dist/formats\").fullFormats.uri;\nvar pattern1 = new RegExp(\"^0x[a-fA-F0-9]{40}$\", \"u\");\nvar pattern2 = new RegExp(\"^[ \\\\S+]+$\", \"u\");\nvar pattern3 = new RegExp(\"^\\\\S+$\", \"u\");\n\nfunction validate15(data) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$instancePath = _ref.instancePath,\n      instancePath = _ref$instancePath === void 0 ? \"\" : _ref$instancePath;\n      _ref.parentData;\n      _ref.parentDataProperty;\n      _ref.rootData;\n\n  var vErrors = null;\n  var errors = 0;\n  var _errs0 = errors;\n  var valid0 = false;\n  var _errs1 = errors;\n  var _errs3 = errors;\n  var valid2 = false;\n  var _errs4 = errors;\n\n  if (errors === _errs4) {\n    if (typeof data === \"string\") {\n      if (func2(data) > 42) {\n        var err0 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/maxLength\",\n          keyword: \"maxLength\",\n          params: {\n            limit: 42\n          },\n          message: \"must NOT have more than 42 characters\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      } else {\n        if (func2(data) < 1) {\n          var err1 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/minLength\",\n            keyword: \"minLength\",\n            params: {\n              limit: 1\n            },\n            message: \"must NOT have fewer than 1 characters\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err1];\n          } else {\n            vErrors.push(err1);\n          }\n\n          errors++;\n        }\n      }\n    } else {\n      var err2 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/type\",\n        keyword: \"type\",\n        params: {\n          type: \"string\"\n        },\n        message: \"must be string\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err2];\n      } else {\n        vErrors.push(err2);\n      }\n\n      errors++;\n    }\n  }\n\n  var _valid1 = _errs4 === errors;\n\n  valid2 = valid2 || _valid1;\n\n  if (!valid2) {\n    var _errs6 = errors;\n\n    if (typeof data !== \"boolean\") {\n      var err3 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/1/type\",\n        keyword: \"type\",\n        params: {\n          type: \"boolean\"\n        },\n        message: \"must be boolean\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err3];\n      } else {\n        vErrors.push(err3);\n      }\n\n      errors++;\n    }\n\n    var _valid1 = _errs6 === errors;\n\n    valid2 = valid2 || _valid1;\n\n    if (!valid2) {\n      var _errs8 = errors;\n\n      if (!(typeof data == \"number\" && isFinite(data))) {\n        var err4 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/2/type\",\n          keyword: \"type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"must be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err4];\n        } else {\n          vErrors.push(err4);\n        }\n\n        errors++;\n      }\n\n      var _valid1 = _errs8 === errors;\n\n      valid2 = valid2 || _valid1;\n\n      if (!valid2) {\n        var _errs10 = errors;\n\n        if (data !== null) {\n          var err5 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/3/type\",\n            keyword: \"type\",\n            params: {\n              type: \"null\"\n            },\n            message: \"must be null\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err5];\n          } else {\n            vErrors.push(err5);\n          }\n\n          errors++;\n        }\n\n        var _valid1 = _errs10 === errors;\n\n        valid2 = valid2 || _valid1;\n      }\n    }\n  }\n\n  if (!valid2) {\n    var err6 = {\n      instancePath: instancePath,\n      schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err6];\n    } else {\n      vErrors.push(err6);\n    }\n\n    errors++;\n  } else {\n    errors = _errs3;\n\n    if (vErrors !== null) {\n      if (_errs3) {\n        vErrors.length = _errs3;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  var _valid0 = _errs1 === errors;\n\n  valid0 = valid0 || _valid0;\n\n  if (!valid0) {\n    var err7 = {\n      instancePath: instancePath,\n      schemaPath: \"#/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err7];\n    } else {\n      vErrors.push(err7);\n    }\n\n    errors++;\n    validate15.errors = vErrors;\n    return false;\n  } else {\n    errors = _errs0;\n\n    if (vErrors !== null) {\n      if (_errs0) {\n        vErrors.length = _errs0;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  validate15.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate14(data) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$instancePath = _ref2.instancePath,\n      instancePath = _ref2$instancePath === void 0 ? \"\" : _ref2$instancePath;\n      _ref2.parentData;\n      _ref2.parentDataProperty;\n      var _ref2$rootData = _ref2.rootData,\n      rootData = _ref2$rootData === void 0 ? data : _ref2$rootData;\n\n  var vErrors = null;\n  var errors = 0;\n  var _errs0 = errors;\n  var valid0 = false;\n  var _errs1 = errors;\n  var _errs3 = errors;\n  var valid2 = false;\n  var _errs4 = errors;\n\n  if (errors === _errs4) {\n    if (typeof data === \"string\") {\n      if (func2(data) > 42) {\n        var err0 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/maxLength\",\n          keyword: \"maxLength\",\n          params: {\n            limit: 42\n          },\n          message: \"must NOT have more than 42 characters\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      } else {\n        if (func2(data) < 1) {\n          var err1 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/minLength\",\n            keyword: \"minLength\",\n            params: {\n              limit: 1\n            },\n            message: \"must NOT have fewer than 1 characters\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err1];\n          } else {\n            vErrors.push(err1);\n          }\n\n          errors++;\n        }\n      }\n    } else {\n      var err2 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/type\",\n        keyword: \"type\",\n        params: {\n          type: \"string\"\n        },\n        message: \"must be string\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err2];\n      } else {\n        vErrors.push(err2);\n      }\n\n      errors++;\n    }\n  }\n\n  var _valid1 = _errs4 === errors;\n\n  valid2 = valid2 || _valid1;\n\n  if (!valid2) {\n    var _errs6 = errors;\n\n    if (typeof data !== \"boolean\") {\n      var err3 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/1/type\",\n        keyword: \"type\",\n        params: {\n          type: \"boolean\"\n        },\n        message: \"must be boolean\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err3];\n      } else {\n        vErrors.push(err3);\n      }\n\n      errors++;\n    }\n\n    var _valid1 = _errs6 === errors;\n\n    valid2 = valid2 || _valid1;\n\n    if (!valid2) {\n      var _errs8 = errors;\n\n      if (!(typeof data == \"number\" && isFinite(data))) {\n        var err4 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/2/type\",\n          keyword: \"type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"must be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err4];\n        } else {\n          vErrors.push(err4);\n        }\n\n        errors++;\n      }\n\n      var _valid1 = _errs8 === errors;\n\n      valid2 = valid2 || _valid1;\n\n      if (!valid2) {\n        var _errs10 = errors;\n\n        if (data !== null) {\n          var err5 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/3/type\",\n            keyword: \"type\",\n            params: {\n              type: \"null\"\n            },\n            message: \"must be null\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err5];\n          } else {\n            vErrors.push(err5);\n          }\n\n          errors++;\n        }\n\n        var _valid1 = _errs10 === errors;\n\n        valid2 = valid2 || _valid1;\n      }\n    }\n  }\n\n  if (!valid2) {\n    var err6 = {\n      instancePath: instancePath,\n      schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err6];\n    } else {\n      vErrors.push(err6);\n    }\n\n    errors++;\n  } else {\n    errors = _errs3;\n\n    if (vErrors !== null) {\n      if (_errs3) {\n        vErrors.length = _errs3;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  var _valid0 = _errs1 === errors;\n\n  valid0 = valid0 || _valid0;\n\n  if (!valid0) {\n    var _errs12 = errors;\n\n    if (errors === _errs12) {\n      if (data && _typeof(data) == \"object\" && !Array.isArray(data)) {\n        if (Object.keys(data).length > 10) {\n          var err7 = {\n            instancePath: instancePath,\n            schemaPath: \"#/anyOf/1/maxProperties\",\n            keyword: \"maxProperties\",\n            params: {\n              limit: 10\n            },\n            message: \"must NOT have more than 10 properties\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err7];\n          } else {\n            vErrors.push(err7);\n          }\n\n          errors++;\n        } else {\n          for (var key0 in data) {\n            var _errs14 = errors;\n            var _errs15 = errors;\n\n            if (errors === _errs15) {\n              if (typeof key0 === \"string\") {\n                if (func2(key0) > 40) {\n                  var err8 = {\n                    instancePath: instancePath,\n                    schemaPath: \"#/definitions/ExtensionIdentifier/maxLength\",\n                    keyword: \"maxLength\",\n                    params: {\n                      limit: 40\n                    },\n                    message: \"must NOT have more than 40 characters\",\n                    propertyName: key0\n                  };\n\n                  if (vErrors === null) {\n                    vErrors = [err8];\n                  } else {\n                    vErrors.push(err8);\n                  }\n\n                  errors++;\n                } else {\n                  if (func2(key0) < 1) {\n                    var err9 = {\n                      instancePath: instancePath,\n                      schemaPath: \"#/definitions/ExtensionIdentifier/minLength\",\n                      keyword: \"minLength\",\n                      params: {\n                        limit: 1\n                      },\n                      message: \"must NOT have fewer than 1 characters\",\n                      propertyName: key0\n                    };\n\n                    if (vErrors === null) {\n                      vErrors = [err9];\n                    } else {\n                      vErrors.push(err9);\n                    }\n\n                    errors++;\n                  } else {\n                    if (!pattern4.test(key0)) {\n                      var err10 = {\n                        instancePath: instancePath,\n                        schemaPath: \"#/definitions/ExtensionIdentifier/pattern\",\n                        keyword: \"pattern\",\n                        params: {\n                          pattern: \"^[\\\\w]+$\"\n                        },\n                        message: \"must match pattern \\\"\" + \"^[\\\\w]+$\" + \"\\\"\",\n                        propertyName: key0\n                      };\n\n                      if (vErrors === null) {\n                        vErrors = [err10];\n                      } else {\n                        vErrors.push(err10);\n                      }\n\n                      errors++;\n                    }\n                  }\n                }\n              } else {\n                var err11 = {\n                  instancePath: instancePath,\n                  schemaPath: \"#/definitions/ExtensionIdentifier/type\",\n                  keyword: \"type\",\n                  params: {\n                    type: \"string\"\n                  },\n                  message: \"must be string\",\n                  propertyName: key0\n                };\n\n                if (vErrors === null) {\n                  vErrors = [err11];\n                } else {\n                  vErrors.push(err11);\n                }\n\n                errors++;\n              }\n            }\n\n            var valid3 = _errs14 === errors;\n\n            if (!valid3) {\n              var err12 = {\n                instancePath: instancePath,\n                schemaPath: \"#/anyOf/1/propertyNames\",\n                keyword: \"propertyNames\",\n                params: {\n                  propertyName: key0\n                },\n                message: \"property name must be valid\"\n              };\n\n              if (vErrors === null) {\n                vErrors = [err12];\n              } else {\n                vErrors.push(err12);\n              }\n\n              errors++;\n              break;\n            }\n          }\n\n          if (valid3) {\n            for (var key1 in data) {\n              var _errs18 = errors;\n\n              if (!validate15(data[key1], {\n                instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                parentData: data,\n                parentDataProperty: key1,\n                rootData: rootData\n              })) {\n                vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);\n                errors = vErrors.length;\n              }\n\n              var valid5 = _errs18 === errors;\n\n              if (!valid5) {\n                break;\n              }\n            }\n          }\n        }\n      } else {\n        var err13 = {\n          instancePath: instancePath,\n          schemaPath: \"#/anyOf/1/type\",\n          keyword: \"type\",\n          params: {\n            type: \"object\"\n          },\n          message: \"must be object\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err13];\n        } else {\n          vErrors.push(err13);\n        }\n\n        errors++;\n      }\n    }\n\n    var _valid0 = _errs12 === errors;\n\n    valid0 = valid0 || _valid0;\n  }\n\n  if (!valid0) {\n    var err14 = {\n      instancePath: instancePath,\n      schemaPath: \"#/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err14];\n    } else {\n      vErrors.push(err14);\n    }\n\n    errors++;\n    validate14.errors = vErrors;\n    return false;\n  } else {\n    errors = _errs0;\n\n    if (vErrors !== null) {\n      if (_errs0) {\n        vErrors.length = _errs0;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  validate14.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate13(data) {\n  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref3$instancePath = _ref3.instancePath,\n      instancePath = _ref3$instancePath === void 0 ? \"\" : _ref3$instancePath;\n      _ref3.parentData;\n      _ref3.parentDataProperty;\n      var _ref3$rootData = _ref3.rootData,\n      rootData = _ref3$rootData === void 0 ? data : _ref3$rootData;\n\n  var vErrors = null;\n  var errors = 0;\n  var _errs0 = errors;\n  var valid0 = false;\n  var _errs1 = errors;\n  var _errs3 = errors;\n  var valid2 = false;\n  var _errs4 = errors;\n\n  if (errors === _errs4) {\n    if (typeof data === \"string\") {\n      if (func2(data) > 42) {\n        var err0 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/maxLength\",\n          keyword: \"maxLength\",\n          params: {\n            limit: 42\n          },\n          message: \"must NOT have more than 42 characters\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err0];\n        } else {\n          vErrors.push(err0);\n        }\n\n        errors++;\n      } else {\n        if (func2(data) < 1) {\n          var err1 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/minLength\",\n            keyword: \"minLength\",\n            params: {\n              limit: 1\n            },\n            message: \"must NOT have fewer than 1 characters\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err1];\n          } else {\n            vErrors.push(err1);\n          }\n\n          errors++;\n        }\n      }\n    } else {\n      var err2 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/0/type\",\n        keyword: \"type\",\n        params: {\n          type: \"string\"\n        },\n        message: \"must be string\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err2];\n      } else {\n        vErrors.push(err2);\n      }\n\n      errors++;\n    }\n  }\n\n  var _valid1 = _errs4 === errors;\n\n  valid2 = valid2 || _valid1;\n\n  if (!valid2) {\n    var _errs6 = errors;\n\n    if (typeof data !== \"boolean\") {\n      var err3 = {\n        instancePath: instancePath,\n        schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/1/type\",\n        keyword: \"type\",\n        params: {\n          type: \"boolean\"\n        },\n        message: \"must be boolean\"\n      };\n\n      if (vErrors === null) {\n        vErrors = [err3];\n      } else {\n        vErrors.push(err3);\n      }\n\n      errors++;\n    }\n\n    var _valid1 = _errs6 === errors;\n\n    valid2 = valid2 || _valid1;\n\n    if (!valid2) {\n      var _errs8 = errors;\n\n      if (!(typeof data == \"number\" && isFinite(data))) {\n        var err4 = {\n          instancePath: instancePath,\n          schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/2/type\",\n          keyword: \"type\",\n          params: {\n            type: \"number\"\n          },\n          message: \"must be number\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err4];\n        } else {\n          vErrors.push(err4);\n        }\n\n        errors++;\n      }\n\n      var _valid1 = _errs8 === errors;\n\n      valid2 = valid2 || _valid1;\n\n      if (!valid2) {\n        var _errs10 = errors;\n\n        if (data !== null) {\n          var err5 = {\n            instancePath: instancePath,\n            schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf/3/type\",\n            keyword: \"type\",\n            params: {\n              type: \"null\"\n            },\n            message: \"must be null\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err5];\n          } else {\n            vErrors.push(err5);\n          }\n\n          errors++;\n        }\n\n        var _valid1 = _errs10 === errors;\n\n        valid2 = valid2 || _valid1;\n      }\n    }\n  }\n\n  if (!valid2) {\n    var err6 = {\n      instancePath: instancePath,\n      schemaPath: \"#/definitions/ExtensionPrimitiveValue/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err6];\n    } else {\n      vErrors.push(err6);\n    }\n\n    errors++;\n  } else {\n    errors = _errs3;\n\n    if (vErrors !== null) {\n      if (_errs3) {\n        vErrors.length = _errs3;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  var _valid0 = _errs1 === errors;\n\n  valid0 = valid0 || _valid0;\n\n  if (!valid0) {\n    var _errs12 = errors;\n\n    if (errors === _errs12) {\n      if (data && _typeof(data) == \"object\" && !Array.isArray(data)) {\n        if (Object.keys(data).length > 10) {\n          var err7 = {\n            instancePath: instancePath,\n            schemaPath: \"#/anyOf/1/maxProperties\",\n            keyword: \"maxProperties\",\n            params: {\n              limit: 10\n            },\n            message: \"must NOT have more than 10 properties\"\n          };\n\n          if (vErrors === null) {\n            vErrors = [err7];\n          } else {\n            vErrors.push(err7);\n          }\n\n          errors++;\n        } else {\n          for (var key0 in data) {\n            var _errs14 = errors;\n            var _errs15 = errors;\n\n            if (errors === _errs15) {\n              if (typeof key0 === \"string\") {\n                if (func2(key0) > 40) {\n                  var err8 = {\n                    instancePath: instancePath,\n                    schemaPath: \"#/definitions/ExtensionIdentifier/maxLength\",\n                    keyword: \"maxLength\",\n                    params: {\n                      limit: 40\n                    },\n                    message: \"must NOT have more than 40 characters\",\n                    propertyName: key0\n                  };\n\n                  if (vErrors === null) {\n                    vErrors = [err8];\n                  } else {\n                    vErrors.push(err8);\n                  }\n\n                  errors++;\n                } else {\n                  if (func2(key0) < 1) {\n                    var err9 = {\n                      instancePath: instancePath,\n                      schemaPath: \"#/definitions/ExtensionIdentifier/minLength\",\n                      keyword: \"minLength\",\n                      params: {\n                        limit: 1\n                      },\n                      message: \"must NOT have fewer than 1 characters\",\n                      propertyName: key0\n                    };\n\n                    if (vErrors === null) {\n                      vErrors = [err9];\n                    } else {\n                      vErrors.push(err9);\n                    }\n\n                    errors++;\n                  } else {\n                    if (!pattern4.test(key0)) {\n                      var err10 = {\n                        instancePath: instancePath,\n                        schemaPath: \"#/definitions/ExtensionIdentifier/pattern\",\n                        keyword: \"pattern\",\n                        params: {\n                          pattern: \"^[\\\\w]+$\"\n                        },\n                        message: \"must match pattern \\\"\" + \"^[\\\\w]+$\" + \"\\\"\",\n                        propertyName: key0\n                      };\n\n                      if (vErrors === null) {\n                        vErrors = [err10];\n                      } else {\n                        vErrors.push(err10);\n                      }\n\n                      errors++;\n                    }\n                  }\n                }\n              } else {\n                var err11 = {\n                  instancePath: instancePath,\n                  schemaPath: \"#/definitions/ExtensionIdentifier/type\",\n                  keyword: \"type\",\n                  params: {\n                    type: \"string\"\n                  },\n                  message: \"must be string\",\n                  propertyName: key0\n                };\n\n                if (vErrors === null) {\n                  vErrors = [err11];\n                } else {\n                  vErrors.push(err11);\n                }\n\n                errors++;\n              }\n            }\n\n            var valid3 = _errs14 === errors;\n\n            if (!valid3) {\n              var err12 = {\n                instancePath: instancePath,\n                schemaPath: \"#/anyOf/1/propertyNames\",\n                keyword: \"propertyNames\",\n                params: {\n                  propertyName: key0\n                },\n                message: \"property name must be valid\"\n              };\n\n              if (vErrors === null) {\n                vErrors = [err12];\n              } else {\n                vErrors.push(err12);\n              }\n\n              errors++;\n              break;\n            }\n          }\n\n          if (valid3) {\n            for (var key1 in data) {\n              var _errs18 = errors;\n\n              if (!validate14(data[key1], {\n                instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                parentData: data,\n                parentDataProperty: key1,\n                rootData: rootData\n              })) {\n                vErrors = vErrors === null ? validate14.errors : vErrors.concat(validate14.errors);\n                errors = vErrors.length;\n              }\n\n              var valid5 = _errs18 === errors;\n\n              if (!valid5) {\n                break;\n              }\n            }\n          }\n        }\n      } else {\n        var err13 = {\n          instancePath: instancePath,\n          schemaPath: \"#/anyOf/1/type\",\n          keyword: \"type\",\n          params: {\n            type: \"object\"\n          },\n          message: \"must be object\"\n        };\n\n        if (vErrors === null) {\n          vErrors = [err13];\n        } else {\n          vErrors.push(err13);\n        }\n\n        errors++;\n      }\n    }\n\n    var _valid0 = _errs12 === errors;\n\n    valid0 = valid0 || _valid0;\n  }\n\n  if (!valid0) {\n    var err14 = {\n      instancePath: instancePath,\n      schemaPath: \"#/anyOf\",\n      keyword: \"anyOf\",\n      params: {},\n      message: \"must match a schema in anyOf\"\n    };\n\n    if (vErrors === null) {\n      vErrors = [err14];\n    } else {\n      vErrors.push(err14);\n    }\n\n    errors++;\n    validate13.errors = vErrors;\n    return false;\n  } else {\n    errors = _errs0;\n\n    if (vErrors !== null) {\n      if (_errs0) {\n        vErrors.length = _errs0;\n      } else {\n        vErrors = null;\n      }\n    }\n  }\n\n  validate13.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate12(data) {\n  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref4$instancePath = _ref4.instancePath,\n      instancePath = _ref4$instancePath === void 0 ? \"\" : _ref4$instancePath;\n      _ref4.parentData;\n      _ref4.parentDataProperty;\n      var _ref4$rootData = _ref4.rootData,\n      rootData = _ref4$rootData === void 0 ? data : _ref4$rootData;\n\n  var vErrors = null;\n  var errors = 0;\n\n  if (errors === 0) {\n    if (data && _typeof(data) == \"object\" && !Array.isArray(data)) {\n      if (Object.keys(data).length > 10) {\n        validate12.errors = [{\n          instancePath: instancePath,\n          schemaPath: \"#/maxProperties\",\n          keyword: \"maxProperties\",\n          params: {\n            limit: 10\n          },\n          message: \"must NOT have more than 10 properties\"\n        }];\n        return false;\n      } else {\n        for (var key0 in data) {\n          var _errs1 = errors;\n          var _errs2 = errors;\n\n          if (errors === _errs2) {\n            if (typeof key0 === \"string\") {\n              if (func2(key0) > 40) {\n                var err0 = {\n                  instancePath: instancePath,\n                  schemaPath: \"#/definitions/ExtensionIdentifier/maxLength\",\n                  keyword: \"maxLength\",\n                  params: {\n                    limit: 40\n                  },\n                  message: \"must NOT have more than 40 characters\",\n                  propertyName: key0\n                };\n\n                if (vErrors === null) {\n                  vErrors = [err0];\n                } else {\n                  vErrors.push(err0);\n                }\n\n                errors++;\n              } else {\n                if (func2(key0) < 1) {\n                  var err1 = {\n                    instancePath: instancePath,\n                    schemaPath: \"#/definitions/ExtensionIdentifier/minLength\",\n                    keyword: \"minLength\",\n                    params: {\n                      limit: 1\n                    },\n                    message: \"must NOT have fewer than 1 characters\",\n                    propertyName: key0\n                  };\n\n                  if (vErrors === null) {\n                    vErrors = [err1];\n                  } else {\n                    vErrors.push(err1);\n                  }\n\n                  errors++;\n                } else {\n                  if (!pattern4.test(key0)) {\n                    var err2 = {\n                      instancePath: instancePath,\n                      schemaPath: \"#/definitions/ExtensionIdentifier/pattern\",\n                      keyword: \"pattern\",\n                      params: {\n                        pattern: \"^[\\\\w]+$\"\n                      },\n                      message: \"must match pattern \\\"\" + \"^[\\\\w]+$\" + \"\\\"\",\n                      propertyName: key0\n                    };\n\n                    if (vErrors === null) {\n                      vErrors = [err2];\n                    } else {\n                      vErrors.push(err2);\n                    }\n\n                    errors++;\n                  }\n                }\n              }\n            } else {\n              var err3 = {\n                instancePath: instancePath,\n                schemaPath: \"#/definitions/ExtensionIdentifier/type\",\n                keyword: \"type\",\n                params: {\n                  type: \"string\"\n                },\n                message: \"must be string\",\n                propertyName: key0\n              };\n\n              if (vErrors === null) {\n                vErrors = [err3];\n              } else {\n                vErrors.push(err3);\n              }\n\n              errors++;\n            }\n          }\n\n          var valid0 = _errs1 === errors;\n\n          if (!valid0) {\n            var err4 = {\n              instancePath: instancePath,\n              schemaPath: \"#/propertyNames\",\n              keyword: \"propertyNames\",\n              params: {\n                propertyName: key0\n              },\n              message: \"property name must be valid\"\n            };\n\n            if (vErrors === null) {\n              vErrors = [err4];\n            } else {\n              vErrors.push(err4);\n            }\n\n            errors++;\n            validate12.errors = vErrors;\n            return false;\n          }\n        }\n\n        if (valid0) {\n          for (var key1 in data) {\n            var _errs5 = errors;\n\n            if (!validate13(data[key1], {\n              instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n              parentData: data,\n              parentDataProperty: key1,\n              rootData: rootData\n            })) {\n              vErrors = vErrors === null ? validate13.errors : vErrors.concat(validate13.errors);\n              errors = vErrors.length;\n            }\n\n            var valid2 = _errs5 === errors;\n\n            if (!valid2) {\n              break;\n            }\n          }\n        }\n      }\n    } else {\n      validate12.errors = [{\n        instancePath: instancePath,\n        schemaPath: \"#/type\",\n        keyword: \"type\",\n        params: {\n          type: \"object\"\n        },\n        message: \"must be object\"\n      }];\n      return false;\n    }\n  }\n\n  validate12.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate11(data) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref5$instancePath = _ref5.instancePath,\n      instancePath = _ref5$instancePath === void 0 ? \"\" : _ref5$instancePath;\n      _ref5.parentData;\n      _ref5.parentDataProperty;\n      var _ref5$rootData = _ref5.rootData,\n      rootData = _ref5$rootData === void 0 ? data : _ref5$rootData;\n\n  var vErrors = null;\n  var errors = 0;\n\n  if (errors === 0) {\n    if (data && _typeof(data) == \"object\" && !Array.isArray(data)) {\n      var missing0;\n\n      if (data.chainId === undefined && (missing0 = \"chainId\") || data.address === undefined && (missing0 = \"address\") || data.decimals === undefined && (missing0 = \"decimals\") || data.name === undefined && (missing0 = \"name\") || data.symbol === undefined && (missing0 = \"symbol\")) {\n        validate11.errors = [{\n          instancePath: instancePath,\n          schemaPath: \"#/required\",\n          keyword: \"required\",\n          params: {\n            missingProperty: missing0\n          },\n          message: \"must have required property '\" + missing0 + \"'\"\n        }];\n        return false;\n      } else {\n        var _errs1 = errors;\n\n        for (var key0 in data) {\n          if (!(key0 === \"chainId\" || key0 === \"address\" || key0 === \"decimals\" || key0 === \"name\" || key0 === \"symbol\" || key0 === \"logoURI\" || key0 === \"tags\" || key0 === \"extensions\")) {\n            validate11.errors = [{\n              instancePath: instancePath,\n              schemaPath: \"#/additionalProperties\",\n              keyword: \"additionalProperties\",\n              params: {\n                additionalProperty: key0\n              },\n              message: \"must NOT have additional properties\"\n            }];\n            return false;\n          }\n        }\n\n        if (_errs1 === errors) {\n          if (data.chainId !== undefined) {\n            var data0 = data.chainId;\n            var _errs2 = errors;\n\n            if (!(typeof data0 == \"number\" && !(data0 % 1) && !isNaN(data0) && isFinite(data0))) {\n              validate11.errors = [{\n                instancePath: instancePath + \"/chainId\",\n                schemaPath: \"#/properties/chainId/type\",\n                keyword: \"type\",\n                params: {\n                  type: \"integer\"\n                },\n                message: \"must be integer\"\n              }];\n              return false;\n            }\n\n            if (errors === _errs2) {\n              if (typeof data0 == \"number\" && isFinite(data0)) {\n                if (data0 < 1 || isNaN(data0)) {\n                  validate11.errors = [{\n                    instancePath: instancePath + \"/chainId\",\n                    schemaPath: \"#/properties/chainId/minimum\",\n                    keyword: \"minimum\",\n                    params: {\n                      comparison: \">=\",\n                      limit: 1\n                    },\n                    message: \"must be >= 1\"\n                  }];\n                  return false;\n                }\n              }\n            }\n\n            var valid0 = _errs2 === errors;\n          } else {\n            var valid0 = true;\n          }\n\n          if (valid0) {\n            if (data.address !== undefined) {\n              var data1 = data.address;\n              var _errs4 = errors;\n\n              if (errors === _errs4) {\n                if (typeof data1 === \"string\") {\n                  if (!pattern1.test(data1)) {\n                    validate11.errors = [{\n                      instancePath: instancePath + \"/address\",\n                      schemaPath: \"#/properties/address/pattern\",\n                      keyword: \"pattern\",\n                      params: {\n                        pattern: \"^0x[a-fA-F0-9]{40}$\"\n                      },\n                      message: \"must match pattern \\\"\" + \"^0x[a-fA-F0-9]{40}$\" + \"\\\"\"\n                    }];\n                    return false;\n                  }\n                } else {\n                  validate11.errors = [{\n                    instancePath: instancePath + \"/address\",\n                    schemaPath: \"#/properties/address/type\",\n                    keyword: \"type\",\n                    params: {\n                      type: \"string\"\n                    },\n                    message: \"must be string\"\n                  }];\n                  return false;\n                }\n              }\n\n              var valid0 = _errs4 === errors;\n            } else {\n              var valid0 = true;\n            }\n\n            if (valid0) {\n              if (data.decimals !== undefined) {\n                var data2 = data.decimals;\n                var _errs6 = errors;\n\n                if (!(typeof data2 == \"number\" && !(data2 % 1) && !isNaN(data2) && isFinite(data2))) {\n                  validate11.errors = [{\n                    instancePath: instancePath + \"/decimals\",\n                    schemaPath: \"#/properties/decimals/type\",\n                    keyword: \"type\",\n                    params: {\n                      type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                  }];\n                  return false;\n                }\n\n                if (errors === _errs6) {\n                  if (typeof data2 == \"number\" && isFinite(data2)) {\n                    if (data2 > 255 || isNaN(data2)) {\n                      validate11.errors = [{\n                        instancePath: instancePath + \"/decimals\",\n                        schemaPath: \"#/properties/decimals/maximum\",\n                        keyword: \"maximum\",\n                        params: {\n                          comparison: \"<=\",\n                          limit: 255\n                        },\n                        message: \"must be <= 255\"\n                      }];\n                      return false;\n                    } else {\n                      if (data2 < 0 || isNaN(data2)) {\n                        validate11.errors = [{\n                          instancePath: instancePath + \"/decimals\",\n                          schemaPath: \"#/properties/decimals/minimum\",\n                          keyword: \"minimum\",\n                          params: {\n                            comparison: \">=\",\n                            limit: 0\n                          },\n                          message: \"must be >= 0\"\n                        }];\n                        return false;\n                      }\n                    }\n                  }\n                }\n\n                var valid0 = _errs6 === errors;\n              } else {\n                var valid0 = true;\n              }\n\n              if (valid0) {\n                if (data.name !== undefined) {\n                  var data3 = data.name;\n                  var _errs8 = errors;\n                  var _errs10 = errors;\n                  var valid1 = false;\n                  var _errs11 = errors;\n\n                  if (\"\" !== data3) {\n                    var err0 = {\n                      instancePath: instancePath + \"/name\",\n                      schemaPath: \"#/properties/name/anyOf/0/const\",\n                      keyword: \"const\",\n                      params: {\n                        allowedValue: \"\"\n                      },\n                      message: \"must be equal to constant\"\n                    };\n\n                    if (vErrors === null) {\n                      vErrors = [err0];\n                    } else {\n                      vErrors.push(err0);\n                    }\n\n                    errors++;\n                  }\n\n                  var _valid0 = _errs11 === errors;\n\n                  valid1 = valid1 || _valid0;\n\n                  if (!valid1) {\n                    var _errs12 = errors;\n\n                    if (typeof data3 === \"string\") {\n                      if (!pattern2.test(data3)) {\n                        var err1 = {\n                          instancePath: instancePath + \"/name\",\n                          schemaPath: \"#/properties/name/anyOf/1/pattern\",\n                          keyword: \"pattern\",\n                          params: {\n                            pattern: \"^[ \\\\S+]+$\"\n                          },\n                          message: \"must match pattern \\\"\" + \"^[ \\\\S+]+$\" + \"\\\"\"\n                        };\n\n                        if (vErrors === null) {\n                          vErrors = [err1];\n                        } else {\n                          vErrors.push(err1);\n                        }\n\n                        errors++;\n                      }\n                    }\n\n                    var _valid0 = _errs12 === errors;\n\n                    valid1 = valid1 || _valid0;\n                  }\n\n                  if (!valid1) {\n                    var err2 = {\n                      instancePath: instancePath + \"/name\",\n                      schemaPath: \"#/properties/name/anyOf\",\n                      keyword: \"anyOf\",\n                      params: {},\n                      message: \"must match a schema in anyOf\"\n                    };\n\n                    if (vErrors === null) {\n                      vErrors = [err2];\n                    } else {\n                      vErrors.push(err2);\n                    }\n\n                    errors++;\n                    validate11.errors = vErrors;\n                    return false;\n                  } else {\n                    errors = _errs10;\n\n                    if (vErrors !== null) {\n                      if (_errs10) {\n                        vErrors.length = _errs10;\n                      } else {\n                        vErrors = null;\n                      }\n                    }\n                  }\n\n                  if (errors === _errs8) {\n                    if (typeof data3 === \"string\") {\n                      if (func2(data3) > 40) {\n                        validate11.errors = [{\n                          instancePath: instancePath + \"/name\",\n                          schemaPath: \"#/properties/name/maxLength\",\n                          keyword: \"maxLength\",\n                          params: {\n                            limit: 40\n                          },\n                          message: \"must NOT have more than 40 characters\"\n                        }];\n                        return false;\n                      } else {\n                        if (func2(data3) < 0) {\n                          validate11.errors = [{\n                            instancePath: instancePath + \"/name\",\n                            schemaPath: \"#/properties/name/minLength\",\n                            keyword: \"minLength\",\n                            params: {\n                              limit: 0\n                            },\n                            message: \"must NOT have fewer than 0 characters\"\n                          }];\n                          return false;\n                        }\n                      }\n                    } else {\n                      validate11.errors = [{\n                        instancePath: instancePath + \"/name\",\n                        schemaPath: \"#/properties/name/type\",\n                        keyword: \"type\",\n                        params: {\n                          type: \"string\"\n                        },\n                        message: \"must be string\"\n                      }];\n                      return false;\n                    }\n                  }\n\n                  var valid0 = _errs8 === errors;\n                } else {\n                  var valid0 = true;\n                }\n\n                if (valid0) {\n                  if (data.symbol !== undefined) {\n                    var data4 = data.symbol;\n                    var _errs13 = errors;\n                    var _errs15 = errors;\n                    var valid2 = false;\n                    var _errs16 = errors;\n\n                    if (\"\" !== data4) {\n                      var err3 = {\n                        instancePath: instancePath + \"/symbol\",\n                        schemaPath: \"#/properties/symbol/anyOf/0/const\",\n                        keyword: \"const\",\n                        params: {\n                          allowedValue: \"\"\n                        },\n                        message: \"must be equal to constant\"\n                      };\n\n                      if (vErrors === null) {\n                        vErrors = [err3];\n                      } else {\n                        vErrors.push(err3);\n                      }\n\n                      errors++;\n                    }\n\n                    var _valid1 = _errs16 === errors;\n\n                    valid2 = valid2 || _valid1;\n\n                    if (!valid2) {\n                      var _errs17 = errors;\n\n                      if (typeof data4 === \"string\") {\n                        if (!pattern3.test(data4)) {\n                          var err4 = {\n                            instancePath: instancePath + \"/symbol\",\n                            schemaPath: \"#/properties/symbol/anyOf/1/pattern\",\n                            keyword: \"pattern\",\n                            params: {\n                              pattern: \"^\\\\S+$\"\n                            },\n                            message: \"must match pattern \\\"\" + \"^\\\\S+$\" + \"\\\"\"\n                          };\n\n                          if (vErrors === null) {\n                            vErrors = [err4];\n                          } else {\n                            vErrors.push(err4);\n                          }\n\n                          errors++;\n                        }\n                      }\n\n                      var _valid1 = _errs17 === errors;\n\n                      valid2 = valid2 || _valid1;\n                    }\n\n                    if (!valid2) {\n                      var err5 = {\n                        instancePath: instancePath + \"/symbol\",\n                        schemaPath: \"#/properties/symbol/anyOf\",\n                        keyword: \"anyOf\",\n                        params: {},\n                        message: \"must match a schema in anyOf\"\n                      };\n\n                      if (vErrors === null) {\n                        vErrors = [err5];\n                      } else {\n                        vErrors.push(err5);\n                      }\n\n                      errors++;\n                      validate11.errors = vErrors;\n                      return false;\n                    } else {\n                      errors = _errs15;\n\n                      if (vErrors !== null) {\n                        if (_errs15) {\n                          vErrors.length = _errs15;\n                        } else {\n                          vErrors = null;\n                        }\n                      }\n                    }\n\n                    if (errors === _errs13) {\n                      if (typeof data4 === \"string\") {\n                        if (func2(data4) > 20) {\n                          validate11.errors = [{\n                            instancePath: instancePath + \"/symbol\",\n                            schemaPath: \"#/properties/symbol/maxLength\",\n                            keyword: \"maxLength\",\n                            params: {\n                              limit: 20\n                            },\n                            message: \"must NOT have more than 20 characters\"\n                          }];\n                          return false;\n                        } else {\n                          if (func2(data4) < 0) {\n                            validate11.errors = [{\n                              instancePath: instancePath + \"/symbol\",\n                              schemaPath: \"#/properties/symbol/minLength\",\n                              keyword: \"minLength\",\n                              params: {\n                                limit: 0\n                              },\n                              message: \"must NOT have fewer than 0 characters\"\n                            }];\n                            return false;\n                          }\n                        }\n                      } else {\n                        validate11.errors = [{\n                          instancePath: instancePath + \"/symbol\",\n                          schemaPath: \"#/properties/symbol/type\",\n                          keyword: \"type\",\n                          params: {\n                            type: \"string\"\n                          },\n                          message: \"must be string\"\n                        }];\n                        return false;\n                      }\n                    }\n\n                    var valid0 = _errs13 === errors;\n                  } else {\n                    var valid0 = true;\n                  }\n\n                  if (valid0) {\n                    if (data.logoURI !== undefined) {\n                      var data5 = data.logoURI;\n                      var _errs18 = errors;\n\n                      if (errors === _errs18) {\n                        if (errors === _errs18) {\n                          if (typeof data5 === \"string\") {\n                            if (!formats2(data5)) {\n                              validate11.errors = [{\n                                instancePath: instancePath + \"/logoURI\",\n                                schemaPath: \"#/properties/logoURI/format\",\n                                keyword: \"format\",\n                                params: {\n                                  format: \"uri\"\n                                },\n                                message: \"must match format \\\"\" + \"uri\" + \"\\\"\"\n                              }];\n                              return false;\n                            }\n                          } else {\n                            validate11.errors = [{\n                              instancePath: instancePath + \"/logoURI\",\n                              schemaPath: \"#/properties/logoURI/type\",\n                              keyword: \"type\",\n                              params: {\n                                type: \"string\"\n                              },\n                              message: \"must be string\"\n                            }];\n                            return false;\n                          }\n                        }\n                      }\n\n                      var valid0 = _errs18 === errors;\n                    } else {\n                      var valid0 = true;\n                    }\n\n                    if (valid0) {\n                      if (data.tags !== undefined) {\n                        var data6 = data.tags;\n                        var _errs20 = errors;\n\n                        if (errors === _errs20) {\n                          if (Array.isArray(data6)) {\n                            if (data6.length > 10) {\n                              validate11.errors = [{\n                                instancePath: instancePath + \"/tags\",\n                                schemaPath: \"#/properties/tags/maxItems\",\n                                keyword: \"maxItems\",\n                                params: {\n                                  limit: 10\n                                },\n                                message: \"must NOT have more than 10 items\"\n                              }];\n                              return false;\n                            } else {\n                              var valid3 = true;\n                              var len0 = data6.length;\n\n                              for (var i0 = 0; i0 < len0; i0++) {\n                                var data7 = data6[i0];\n                                var _errs22 = errors;\n                                var _errs23 = errors;\n\n                                if (errors === _errs23) {\n                                  if (typeof data7 === \"string\") {\n                                    if (func2(data7) > 10) {\n                                      validate11.errors = [{\n                                        instancePath: instancePath + \"/tags/\" + i0,\n                                        schemaPath: \"#/definitions/TagIdentifier/maxLength\",\n                                        keyword: \"maxLength\",\n                                        params: {\n                                          limit: 10\n                                        },\n                                        message: \"must NOT have more than 10 characters\"\n                                      }];\n                                      return false;\n                                    } else {\n                                      if (func2(data7) < 1) {\n                                        validate11.errors = [{\n                                          instancePath: instancePath + \"/tags/\" + i0,\n                                          schemaPath: \"#/definitions/TagIdentifier/minLength\",\n                                          keyword: \"minLength\",\n                                          params: {\n                                            limit: 1\n                                          },\n                                          message: \"must NOT have fewer than 1 characters\"\n                                        }];\n                                        return false;\n                                      } else {\n                                        if (!pattern4.test(data7)) {\n                                          validate11.errors = [{\n                                            instancePath: instancePath + \"/tags/\" + i0,\n                                            schemaPath: \"#/definitions/TagIdentifier/pattern\",\n                                            keyword: \"pattern\",\n                                            params: {\n                                              pattern: \"^[\\\\w]+$\"\n                                            },\n                                            message: \"must match pattern \\\"\" + \"^[\\\\w]+$\" + \"\\\"\"\n                                          }];\n                                          return false;\n                                        }\n                                      }\n                                    }\n                                  } else {\n                                    validate11.errors = [{\n                                      instancePath: instancePath + \"/tags/\" + i0,\n                                      schemaPath: \"#/definitions/TagIdentifier/type\",\n                                      keyword: \"type\",\n                                      params: {\n                                        type: \"string\"\n                                      },\n                                      message: \"must be string\"\n                                    }];\n                                    return false;\n                                  }\n                                }\n\n                                var valid3 = _errs22 === errors;\n\n                                if (!valid3) {\n                                  break;\n                                }\n                              }\n                            }\n                          } else {\n                            validate11.errors = [{\n                              instancePath: instancePath + \"/tags\",\n                              schemaPath: \"#/properties/tags/type\",\n                              keyword: \"type\",\n                              params: {\n                                type: \"array\"\n                              },\n                              message: \"must be array\"\n                            }];\n                            return false;\n                          }\n                        }\n\n                        var valid0 = _errs20 === errors;\n                      } else {\n                        var valid0 = true;\n                      }\n\n                      if (valid0) {\n                        if (data.extensions !== undefined) {\n                          var _errs25 = errors;\n\n                          if (!validate12(data.extensions, {\n                            instancePath: instancePath + \"/extensions\",\n                            parentData: data,\n                            parentDataProperty: \"extensions\",\n                            rootData: rootData\n                          })) {\n                            vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);\n                            errors = vErrors.length;\n                          }\n\n                          var valid0 = _errs25 === errors;\n                        } else {\n                          var valid0 = true;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } else {\n      validate11.errors = [{\n        instancePath: instancePath,\n        schemaPath: \"#/type\",\n        keyword: \"type\",\n        params: {\n          type: \"object\"\n        },\n        message: \"must be object\"\n      }];\n      return false;\n    }\n  }\n\n  validate11.errors = vErrors;\n  return errors === 0;\n}\n\nfunction validate10(data) {\n  var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref6$instancePath = _ref6.instancePath,\n      instancePath = _ref6$instancePath === void 0 ? \"\" : _ref6$instancePath;\n      _ref6.parentData;\n      _ref6.parentDataProperty;\n      var _ref6$rootData = _ref6.rootData,\n      rootData = _ref6$rootData === void 0 ? data : _ref6$rootData;\n  var vErrors = null;\n  var errors = 0;\n\n  if (errors === 0) {\n    if (data && _typeof(data) == \"object\" && !Array.isArray(data)) {\n      var missing0;\n\n      if (data.name === undefined && (missing0 = \"name\") || data.timestamp === undefined && (missing0 = \"timestamp\") || data.version === undefined && (missing0 = \"version\") || data.tokens === undefined && (missing0 = \"tokens\")) {\n        validate10.errors = [{\n          instancePath: instancePath,\n          schemaPath: \"#/required\",\n          keyword: \"required\",\n          params: {\n            missingProperty: missing0\n          },\n          message: \"must have required property '\" + missing0 + \"'\"\n        }];\n        return false;\n      } else {\n        var _errs1 = errors;\n\n        for (var key0 in data) {\n          if (!(key0 === \"name\" || key0 === \"timestamp\" || key0 === \"version\" || key0 === \"tokens\" || key0 === \"tokenMap\" || key0 === \"keywords\" || key0 === \"tags\" || key0 === \"logoURI\")) {\n            validate10.errors = [{\n              instancePath: instancePath,\n              schemaPath: \"#/additionalProperties\",\n              keyword: \"additionalProperties\",\n              params: {\n                additionalProperty: key0\n              },\n              message: \"must NOT have additional properties\"\n            }];\n            return false;\n          }\n        }\n\n        if (_errs1 === errors) {\n          if (data.name !== undefined) {\n            var data0 = data.name;\n            var _errs2 = errors;\n\n            if (errors === _errs2) {\n              if (typeof data0 === \"string\") {\n                if (func2(data0) > 30) {\n                  validate10.errors = [{\n                    instancePath: instancePath + \"/name\",\n                    schemaPath: \"#/properties/name/maxLength\",\n                    keyword: \"maxLength\",\n                    params: {\n                      limit: 30\n                    },\n                    message: \"must NOT have more than 30 characters\"\n                  }];\n                  return false;\n                } else {\n                  if (func2(data0) < 1) {\n                    validate10.errors = [{\n                      instancePath: instancePath + \"/name\",\n                      schemaPath: \"#/properties/name/minLength\",\n                      keyword: \"minLength\",\n                      params: {\n                        limit: 1\n                      },\n                      message: \"must NOT have fewer than 1 characters\"\n                    }];\n                    return false;\n                  } else {\n                    if (!pattern0.test(data0)) {\n                      validate10.errors = [{\n                        instancePath: instancePath + \"/name\",\n                        schemaPath: \"#/properties/name/pattern\",\n                        keyword: \"pattern\",\n                        params: {\n                          pattern: \"^[\\\\w ]+$\"\n                        },\n                        message: \"must match pattern \\\"\" + \"^[\\\\w ]+$\" + \"\\\"\"\n                      }];\n                      return false;\n                    }\n                  }\n                }\n              } else {\n                validate10.errors = [{\n                  instancePath: instancePath + \"/name\",\n                  schemaPath: \"#/properties/name/type\",\n                  keyword: \"type\",\n                  params: {\n                    type: \"string\"\n                  },\n                  message: \"must be string\"\n                }];\n                return false;\n              }\n            }\n\n            var valid0 = _errs2 === errors;\n          } else {\n            var valid0 = true;\n          }\n\n          if (valid0) {\n            if (data.timestamp !== undefined) {\n              var data1 = data.timestamp;\n              var _errs4 = errors;\n\n              if (errors === _errs4) {\n                if (errors === _errs4) {\n                  if (typeof data1 === \"string\") {\n                    if (!formats0.validate(data1)) {\n                      validate10.errors = [{\n                        instancePath: instancePath + \"/timestamp\",\n                        schemaPath: \"#/properties/timestamp/format\",\n                        keyword: \"format\",\n                        params: {\n                          format: \"date-time\"\n                        },\n                        message: \"must match format \\\"\" + \"date-time\" + \"\\\"\"\n                      }];\n                      return false;\n                    }\n                  } else {\n                    validate10.errors = [{\n                      instancePath: instancePath + \"/timestamp\",\n                      schemaPath: \"#/properties/timestamp/type\",\n                      keyword: \"type\",\n                      params: {\n                        type: \"string\"\n                      },\n                      message: \"must be string\"\n                    }];\n                    return false;\n                  }\n                }\n              }\n\n              var valid0 = _errs4 === errors;\n            } else {\n              var valid0 = true;\n            }\n\n            if (valid0) {\n              if (data.version !== undefined) {\n                var data2 = data.version;\n                var _errs6 = errors;\n                var _errs7 = errors;\n\n                if (errors === _errs7) {\n                  if (data2 && _typeof(data2) == \"object\" && !Array.isArray(data2)) {\n                    var missing1;\n\n                    if (data2.major === undefined && (missing1 = \"major\") || data2.minor === undefined && (missing1 = \"minor\") || data2.patch === undefined && (missing1 = \"patch\")) {\n                      validate10.errors = [{\n                        instancePath: instancePath + \"/version\",\n                        schemaPath: \"#/definitions/Version/required\",\n                        keyword: \"required\",\n                        params: {\n                          missingProperty: missing1\n                        },\n                        message: \"must have required property '\" + missing1 + \"'\"\n                      }];\n                      return false;\n                    } else {\n                      var _errs9 = errors;\n\n                      for (var key1 in data2) {\n                        if (!(key1 === \"major\" || key1 === \"minor\" || key1 === \"patch\")) {\n                          validate10.errors = [{\n                            instancePath: instancePath + \"/version\",\n                            schemaPath: \"#/definitions/Version/additionalProperties\",\n                            keyword: \"additionalProperties\",\n                            params: {\n                              additionalProperty: key1\n                            },\n                            message: \"must NOT have additional properties\"\n                          }];\n                          return false;\n                        }\n                      }\n\n                      if (_errs9 === errors) {\n                        if (data2.major !== undefined) {\n                          var data3 = data2.major;\n                          var _errs10 = errors;\n\n                          if (!(typeof data3 == \"number\" && !(data3 % 1) && !isNaN(data3) && isFinite(data3))) {\n                            validate10.errors = [{\n                              instancePath: instancePath + \"/version/major\",\n                              schemaPath: \"#/definitions/Version/properties/major/type\",\n                              keyword: \"type\",\n                              params: {\n                                type: \"integer\"\n                              },\n                              message: \"must be integer\"\n                            }];\n                            return false;\n                          }\n\n                          if (errors === _errs10) {\n                            if (typeof data3 == \"number\" && isFinite(data3)) {\n                              if (data3 < 0 || isNaN(data3)) {\n                                validate10.errors = [{\n                                  instancePath: instancePath + \"/version/major\",\n                                  schemaPath: \"#/definitions/Version/properties/major/minimum\",\n                                  keyword: \"minimum\",\n                                  params: {\n                                    comparison: \">=\",\n                                    limit: 0\n                                  },\n                                  message: \"must be >= 0\"\n                                }];\n                                return false;\n                              }\n                            }\n                          }\n\n                          var valid2 = _errs10 === errors;\n                        } else {\n                          var valid2 = true;\n                        }\n\n                        if (valid2) {\n                          if (data2.minor !== undefined) {\n                            var data4 = data2.minor;\n                            var _errs12 = errors;\n\n                            if (!(typeof data4 == \"number\" && !(data4 % 1) && !isNaN(data4) && isFinite(data4))) {\n                              validate10.errors = [{\n                                instancePath: instancePath + \"/version/minor\",\n                                schemaPath: \"#/definitions/Version/properties/minor/type\",\n                                keyword: \"type\",\n                                params: {\n                                  type: \"integer\"\n                                },\n                                message: \"must be integer\"\n                              }];\n                              return false;\n                            }\n\n                            if (errors === _errs12) {\n                              if (typeof data4 == \"number\" && isFinite(data4)) {\n                                if (data4 < 0 || isNaN(data4)) {\n                                  validate10.errors = [{\n                                    instancePath: instancePath + \"/version/minor\",\n                                    schemaPath: \"#/definitions/Version/properties/minor/minimum\",\n                                    keyword: \"minimum\",\n                                    params: {\n                                      comparison: \">=\",\n                                      limit: 0\n                                    },\n                                    message: \"must be >= 0\"\n                                  }];\n                                  return false;\n                                }\n                              }\n                            }\n\n                            var valid2 = _errs12 === errors;\n                          } else {\n                            var valid2 = true;\n                          }\n\n                          if (valid2) {\n                            if (data2.patch !== undefined) {\n                              var data5 = data2.patch;\n                              var _errs14 = errors;\n\n                              if (!(typeof data5 == \"number\" && !(data5 % 1) && !isNaN(data5) && isFinite(data5))) {\n                                validate10.errors = [{\n                                  instancePath: instancePath + \"/version/patch\",\n                                  schemaPath: \"#/definitions/Version/properties/patch/type\",\n                                  keyword: \"type\",\n                                  params: {\n                                    type: \"integer\"\n                                  },\n                                  message: \"must be integer\"\n                                }];\n                                return false;\n                              }\n\n                              if (errors === _errs14) {\n                                if (typeof data5 == \"number\" && isFinite(data5)) {\n                                  if (data5 < 0 || isNaN(data5)) {\n                                    validate10.errors = [{\n                                      instancePath: instancePath + \"/version/patch\",\n                                      schemaPath: \"#/definitions/Version/properties/patch/minimum\",\n                                      keyword: \"minimum\",\n                                      params: {\n                                        comparison: \">=\",\n                                        limit: 0\n                                      },\n                                      message: \"must be >= 0\"\n                                    }];\n                                    return false;\n                                  }\n                                }\n                              }\n\n                              var valid2 = _errs14 === errors;\n                            } else {\n                              var valid2 = true;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    validate10.errors = [{\n                      instancePath: instancePath + \"/version\",\n                      schemaPath: \"#/definitions/Version/type\",\n                      keyword: \"type\",\n                      params: {\n                        type: \"object\"\n                      },\n                      message: \"must be object\"\n                    }];\n                    return false;\n                  }\n                }\n\n                var valid0 = _errs6 === errors;\n              } else {\n                var valid0 = true;\n              }\n\n              if (valid0) {\n                if (data.tokens !== undefined) {\n                  var data6 = data.tokens;\n                  var _errs16 = errors;\n\n                  if (errors === _errs16) {\n                    if (Array.isArray(data6)) {\n                      if (data6.length > 10000) {\n                        validate10.errors = [{\n                          instancePath: instancePath + \"/tokens\",\n                          schemaPath: \"#/properties/tokens/maxItems\",\n                          keyword: \"maxItems\",\n                          params: {\n                            limit: 10000\n                          },\n                          message: \"must NOT have more than 10000 items\"\n                        }];\n                        return false;\n                      } else {\n                        if (data6.length < 1) {\n                          validate10.errors = [{\n                            instancePath: instancePath + \"/tokens\",\n                            schemaPath: \"#/properties/tokens/minItems\",\n                            keyword: \"minItems\",\n                            params: {\n                              limit: 1\n                            },\n                            message: \"must NOT have fewer than 1 items\"\n                          }];\n                          return false;\n                        } else {\n                          var valid3 = true;\n                          var len0 = data6.length;\n\n                          for (var i0 = 0; i0 < len0; i0++) {\n                            var _errs18 = errors;\n\n                            if (!validate11(data6[i0], {\n                              instancePath: instancePath + \"/tokens/\" + i0,\n                              parentData: data6,\n                              parentDataProperty: i0,\n                              rootData: rootData\n                            })) {\n                              vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);\n                              errors = vErrors.length;\n                            }\n\n                            var valid3 = _errs18 === errors;\n\n                            if (!valid3) {\n                              break;\n                            }\n                          }\n                        }\n                      }\n                    } else {\n                      validate10.errors = [{\n                        instancePath: instancePath + \"/tokens\",\n                        schemaPath: \"#/properties/tokens/type\",\n                        keyword: \"type\",\n                        params: {\n                          type: \"array\"\n                        },\n                        message: \"must be array\"\n                      }];\n                      return false;\n                    }\n                  }\n\n                  var valid0 = _errs16 === errors;\n                } else {\n                  var valid0 = true;\n                }\n\n                if (valid0) {\n                  if (data.tokenMap !== undefined) {\n                    var data8 = data.tokenMap;\n                    var _errs19 = errors;\n\n                    if (errors === _errs19) {\n                      if (data8 && _typeof(data8) == \"object\" && !Array.isArray(data8)) {\n                        if (Object.keys(data8).length > 10000) {\n                          validate10.errors = [{\n                            instancePath: instancePath + \"/tokenMap\",\n                            schemaPath: \"#/properties/tokenMap/maxProperties\",\n                            keyword: \"maxProperties\",\n                            params: {\n                              limit: 10000\n                            },\n                            message: \"must NOT have more than 10000 properties\"\n                          }];\n                          return false;\n                        } else {\n                          if (Object.keys(data8).length < 1) {\n                            validate10.errors = [{\n                              instancePath: instancePath + \"/tokenMap\",\n                              schemaPath: \"#/properties/tokenMap/minProperties\",\n                              keyword: \"minProperties\",\n                              params: {\n                                limit: 1\n                              },\n                              message: \"must NOT have fewer than 1 properties\"\n                            }];\n                            return false;\n                          } else {\n                            for (var key2 in data8) {\n                              var _errs21 = errors;\n\n                              if (typeof key2 !== \"string\") {\n                                var err0 = {\n                                  instancePath: instancePath + \"/tokenMap\",\n                                  schemaPath: \"#/properties/tokenMap/propertyNames/type\",\n                                  keyword: \"type\",\n                                  params: {\n                                    type: \"string\"\n                                  },\n                                  message: \"must be string\",\n                                  propertyName: key2\n                                };\n\n                                if (vErrors === null) {\n                                  vErrors = [err0];\n                                } else {\n                                  vErrors.push(err0);\n                                }\n\n                                errors++;\n                              }\n\n                              var valid4 = _errs21 === errors;\n\n                              if (!valid4) {\n                                var err1 = {\n                                  instancePath: instancePath + \"/tokenMap\",\n                                  schemaPath: \"#/properties/tokenMap/propertyNames\",\n                                  keyword: \"propertyNames\",\n                                  params: {\n                                    propertyName: key2\n                                  },\n                                  message: \"property name must be valid\"\n                                };\n\n                                if (vErrors === null) {\n                                  vErrors = [err1];\n                                } else {\n                                  vErrors.push(err1);\n                                }\n\n                                errors++;\n                                validate10.errors = vErrors;\n                                return false;\n                              }\n                            }\n\n                            if (valid4) {\n                              for (var key3 in data8) {\n                                var _errs24 = errors;\n\n                                if (!validate11(data8[key3], {\n                                  instancePath: instancePath + \"/tokenMap/\" + key3.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                                  parentData: data8,\n                                  parentDataProperty: key3,\n                                  rootData: rootData\n                                })) {\n                                  vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);\n                                  errors = vErrors.length;\n                                }\n\n                                var valid5 = _errs24 === errors;\n\n                                if (!valid5) {\n                                  break;\n                                }\n                              }\n                            }\n                          }\n                        }\n                      } else {\n                        validate10.errors = [{\n                          instancePath: instancePath + \"/tokenMap\",\n                          schemaPath: \"#/properties/tokenMap/type\",\n                          keyword: \"type\",\n                          params: {\n                            type: \"object\"\n                          },\n                          message: \"must be object\"\n                        }];\n                        return false;\n                      }\n                    }\n\n                    var valid0 = _errs19 === errors;\n                  } else {\n                    var valid0 = true;\n                  }\n\n                  if (valid0) {\n                    if (data.keywords !== undefined) {\n                      var data10 = data.keywords;\n                      var _errs25 = errors;\n\n                      if (errors === _errs25) {\n                        if (Array.isArray(data10)) {\n                          if (data10.length > 20) {\n                            validate10.errors = [{\n                              instancePath: instancePath + \"/keywords\",\n                              schemaPath: \"#/properties/keywords/maxItems\",\n                              keyword: \"maxItems\",\n                              params: {\n                                limit: 20\n                              },\n                              message: \"must NOT have more than 20 items\"\n                            }];\n                            return false;\n                          } else {\n                            var valid6 = true;\n                            var len1 = data10.length;\n\n                            for (var i1 = 0; i1 < len1; i1++) {\n                              var data11 = data10[i1];\n                              var _errs27 = errors;\n\n                              if (errors === _errs27) {\n                                if (typeof data11 === \"string\") {\n                                  if (func2(data11) > 20) {\n                                    validate10.errors = [{\n                                      instancePath: instancePath + \"/keywords/\" + i1,\n                                      schemaPath: \"#/properties/keywords/items/maxLength\",\n                                      keyword: \"maxLength\",\n                                      params: {\n                                        limit: 20\n                                      },\n                                      message: \"must NOT have more than 20 characters\"\n                                    }];\n                                    return false;\n                                  } else {\n                                    if (func2(data11) < 1) {\n                                      validate10.errors = [{\n                                        instancePath: instancePath + \"/keywords/\" + i1,\n                                        schemaPath: \"#/properties/keywords/items/minLength\",\n                                        keyword: \"minLength\",\n                                        params: {\n                                          limit: 1\n                                        },\n                                        message: \"must NOT have fewer than 1 characters\"\n                                      }];\n                                      return false;\n                                    } else {\n                                      if (!pattern0.test(data11)) {\n                                        validate10.errors = [{\n                                          instancePath: instancePath + \"/keywords/\" + i1,\n                                          schemaPath: \"#/properties/keywords/items/pattern\",\n                                          keyword: \"pattern\",\n                                          params: {\n                                            pattern: \"^[\\\\w ]+$\"\n                                          },\n                                          message: \"must match pattern \\\"\" + \"^[\\\\w ]+$\" + \"\\\"\"\n                                        }];\n                                        return false;\n                                      }\n                                    }\n                                  }\n                                } else {\n                                  validate10.errors = [{\n                                    instancePath: instancePath + \"/keywords/\" + i1,\n                                    schemaPath: \"#/properties/keywords/items/type\",\n                                    keyword: \"type\",\n                                    params: {\n                                      type: \"string\"\n                                    },\n                                    message: \"must be string\"\n                                  }];\n                                  return false;\n                                }\n                              }\n\n                              var valid6 = _errs27 === errors;\n\n                              if (!valid6) {\n                                break;\n                              }\n                            }\n\n                            if (valid6) {\n                              var i2 = data10.length;\n                              var j0;\n\n                              if (i2 > 1) {\n                                var indices0 = {};\n\n                                for (; i2--;) {\n                                  var item0 = data10[i2];\n\n                                  if (typeof item0 !== \"string\") {\n                                    continue;\n                                  }\n\n                                  if (typeof indices0[item0] == \"number\") {\n                                    j0 = indices0[item0];\n                                    validate10.errors = [{\n                                      instancePath: instancePath + \"/keywords\",\n                                      schemaPath: \"#/properties/keywords/uniqueItems\",\n                                      keyword: \"uniqueItems\",\n                                      params: {\n                                        i: i2,\n                                        j: j0\n                                      },\n                                      message: \"must NOT have duplicate items (items ## \" + j0 + \" and \" + i2 + \" are identical)\"\n                                    }];\n                                    return false;\n                                  }\n\n                                  indices0[item0] = i2;\n                                }\n                              }\n                            }\n                          }\n                        } else {\n                          validate10.errors = [{\n                            instancePath: instancePath + \"/keywords\",\n                            schemaPath: \"#/properties/keywords/type\",\n                            keyword: \"type\",\n                            params: {\n                              type: \"array\"\n                            },\n                            message: \"must be array\"\n                          }];\n                          return false;\n                        }\n                      }\n\n                      var valid0 = _errs25 === errors;\n                    } else {\n                      var valid0 = true;\n                    }\n\n                    if (valid0) {\n                      if (data.tags !== undefined) {\n                        var data12 = data.tags;\n                        var _errs29 = errors;\n\n                        if (errors === _errs29) {\n                          if (data12 && _typeof(data12) == \"object\" && !Array.isArray(data12)) {\n                            if (Object.keys(data12).length > 20) {\n                              validate10.errors = [{\n                                instancePath: instancePath + \"/tags\",\n                                schemaPath: \"#/properties/tags/maxProperties\",\n                                keyword: \"maxProperties\",\n                                params: {\n                                  limit: 20\n                                },\n                                message: \"must NOT have more than 20 properties\"\n                              }];\n                              return false;\n                            } else {\n                              for (var key4 in data12) {\n                                var _errs31 = errors;\n                                var _errs32 = errors;\n\n                                if (errors === _errs32) {\n                                  if (typeof key4 === \"string\") {\n                                    if (func2(key4) > 10) {\n                                      var err2 = {\n                                        instancePath: instancePath + \"/tags\",\n                                        schemaPath: \"#/definitions/TagIdentifier/maxLength\",\n                                        keyword: \"maxLength\",\n                                        params: {\n                                          limit: 10\n                                        },\n                                        message: \"must NOT have more than 10 characters\",\n                                        propertyName: key4\n                                      };\n\n                                      if (vErrors === null) {\n                                        vErrors = [err2];\n                                      } else {\n                                        vErrors.push(err2);\n                                      }\n\n                                      errors++;\n                                    } else {\n                                      if (func2(key4) < 1) {\n                                        var err3 = {\n                                          instancePath: instancePath + \"/tags\",\n                                          schemaPath: \"#/definitions/TagIdentifier/minLength\",\n                                          keyword: \"minLength\",\n                                          params: {\n                                            limit: 1\n                                          },\n                                          message: \"must NOT have fewer than 1 characters\",\n                                          propertyName: key4\n                                        };\n\n                                        if (vErrors === null) {\n                                          vErrors = [err3];\n                                        } else {\n                                          vErrors.push(err3);\n                                        }\n\n                                        errors++;\n                                      } else {\n                                        if (!pattern4.test(key4)) {\n                                          var err4 = {\n                                            instancePath: instancePath + \"/tags\",\n                                            schemaPath: \"#/definitions/TagIdentifier/pattern\",\n                                            keyword: \"pattern\",\n                                            params: {\n                                              pattern: \"^[\\\\w]+$\"\n                                            },\n                                            message: \"must match pattern \\\"\" + \"^[\\\\w]+$\" + \"\\\"\",\n                                            propertyName: key4\n                                          };\n\n                                          if (vErrors === null) {\n                                            vErrors = [err4];\n                                          } else {\n                                            vErrors.push(err4);\n                                          }\n\n                                          errors++;\n                                        }\n                                      }\n                                    }\n                                  } else {\n                                    var err5 = {\n                                      instancePath: instancePath + \"/tags\",\n                                      schemaPath: \"#/definitions/TagIdentifier/type\",\n                                      keyword: \"type\",\n                                      params: {\n                                        type: \"string\"\n                                      },\n                                      message: \"must be string\",\n                                      propertyName: key4\n                                    };\n\n                                    if (vErrors === null) {\n                                      vErrors = [err5];\n                                    } else {\n                                      vErrors.push(err5);\n                                    }\n\n                                    errors++;\n                                  }\n                                }\n\n                                var valid8 = _errs31 === errors;\n\n                                if (!valid8) {\n                                  var err6 = {\n                                    instancePath: instancePath + \"/tags\",\n                                    schemaPath: \"#/properties/tags/propertyNames\",\n                                    keyword: \"propertyNames\",\n                                    params: {\n                                      propertyName: key4\n                                    },\n                                    message: \"property name must be valid\"\n                                  };\n\n                                  if (vErrors === null) {\n                                    vErrors = [err6];\n                                  } else {\n                                    vErrors.push(err6);\n                                  }\n\n                                  errors++;\n                                  validate10.errors = vErrors;\n                                  return false;\n                                }\n                              }\n\n                              if (valid8) {\n                                for (var key5 in data12) {\n                                  var data13 = data12[key5];\n                                  var _errs35 = errors;\n                                  var _errs36 = errors;\n\n                                  if (errors === _errs36) {\n                                    if (data13 && _typeof(data13) == \"object\" && !Array.isArray(data13)) {\n                                      var missing2 = void 0;\n\n                                      if (data13.name === undefined && (missing2 = \"name\") || data13.description === undefined && (missing2 = \"description\")) {\n                                        validate10.errors = [{\n                                          instancePath: instancePath + \"/tags/\" + key5.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                                          schemaPath: \"#/definitions/TagDefinition/required\",\n                                          keyword: \"required\",\n                                          params: {\n                                            missingProperty: missing2\n                                          },\n                                          message: \"must have required property '\" + missing2 + \"'\"\n                                        }];\n                                        return false;\n                                      } else {\n                                        var _errs38 = errors;\n\n                                        for (var key6 in data13) {\n                                          if (!(key6 === \"name\" || key6 === \"description\")) {\n                                            validate10.errors = [{\n                                              instancePath: instancePath + \"/tags/\" + key5.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                                              schemaPath: \"#/definitions/TagDefinition/additionalProperties\",\n                                              keyword: \"additionalProperties\",\n                                              params: {\n                                                additionalProperty: key6\n                                              },\n                                              message: \"must NOT have additional properties\"\n                                            }];\n                                            return false;\n                                          }\n                                        }\n\n                                        if (_errs38 === errors) {\n                                          if (data13.name !== undefined) {\n                                            var data14 = data13.name;\n                                            var _errs39 = errors;\n\n                                            if (errors === _errs39) {\n                                              if (typeof data14 === \"string\") {\n                                                if (func2(data14) > 20) {\n                                                  validate10.errors = [{\n                                                    instancePath: instancePath + \"/tags/\" + key5.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/name\",\n                                                    schemaPath: \"#/definitions/TagDefinition/properties/name/maxLength\",\n                                                    keyword: \"maxLength\",\n                                                    params: {\n                                                      limit: 20\n                                                    },\n                                                    message: \"must NOT have more than 20 characters\"\n                                                  }];\n                                                  return false;\n                                                } else {\n                                                  if (func2(data14) < 1) {\n                                                    validate10.errors = [{\n                                                      instancePath: instancePath + \"/tags/\" + key5.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/name\",\n                                                      schemaPath: \"#/definitions/TagDefinition/properties/name/minLength\",\n                                                      keyword: \"minLength\",\n                                                      params: {\n                                                        limit: 1\n                                                      },\n                                                      message: \"must NOT have fewer than 1 characters\"\n                                                    }];\n                                                    return false;\n                                                  } else {\n                                                    if (!pattern10.test(data14)) {\n                                                      validate10.errors = [{\n                                                        instancePath: instancePath + \"/tags/\" + key5.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/name\",\n                                                        schemaPath: \"#/definitions/TagDefinition/properties/name/pattern\",\n                                                        keyword: \"pattern\",\n                                                        params: {\n                                                          pattern: \"^[ \\\\w]+$\"\n                                                        },\n                                                        message: \"must match pattern \\\"\" + \"^[ \\\\w]+$\" + \"\\\"\"\n                                                      }];\n                                                      return false;\n                                                    }\n                                                  }\n                                                }\n                                              } else {\n                                                validate10.errors = [{\n                                                  instancePath: instancePath + \"/tags/\" + key5.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/name\",\n                                                  schemaPath: \"#/definitions/TagDefinition/properties/name/type\",\n                                                  keyword: \"type\",\n                                                  params: {\n                                                    type: \"string\"\n                                                  },\n                                                  message: \"must be string\"\n                                                }];\n                                                return false;\n                                              }\n                                            }\n\n                                            var valid12 = _errs39 === errors;\n                                          } else {\n                                            var valid12 = true;\n                                          }\n\n                                          if (valid12) {\n                                            if (data13.description !== undefined) {\n                                              var data15 = data13.description;\n                                              var _errs41 = errors;\n\n                                              if (errors === _errs41) {\n                                                if (typeof data15 === \"string\") {\n                                                  if (func2(data15) > 200) {\n                                                    validate10.errors = [{\n                                                      instancePath: instancePath + \"/tags/\" + key5.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/description\",\n                                                      schemaPath: \"#/definitions/TagDefinition/properties/description/maxLength\",\n                                                      keyword: \"maxLength\",\n                                                      params: {\n                                                        limit: 200\n                                                      },\n                                                      message: \"must NOT have more than 200 characters\"\n                                                    }];\n                                                    return false;\n                                                  } else {\n                                                    if (func2(data15) < 1) {\n                                                      validate10.errors = [{\n                                                        instancePath: instancePath + \"/tags/\" + key5.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/description\",\n                                                        schemaPath: \"#/definitions/TagDefinition/properties/description/minLength\",\n                                                        keyword: \"minLength\",\n                                                        params: {\n                                                          limit: 1\n                                                        },\n                                                        message: \"must NOT have fewer than 1 characters\"\n                                                      }];\n                                                      return false;\n                                                    } else {\n                                                      if (!pattern11.test(data15)) {\n                                                        validate10.errors = [{\n                                                          instancePath: instancePath + \"/tags/\" + key5.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/description\",\n                                                          schemaPath: \"#/definitions/TagDefinition/properties/description/pattern\",\n                                                          keyword: \"pattern\",\n                                                          params: {\n                                                            pattern: \"^[ \\\\w\\\\.,:]+$\"\n                                                          },\n                                                          message: \"must match pattern \\\"\" + \"^[ \\\\w\\\\.,:]+$\" + \"\\\"\"\n                                                        }];\n                                                        return false;\n                                                      }\n                                                    }\n                                                  }\n                                                } else {\n                                                  validate10.errors = [{\n                                                    instancePath: instancePath + \"/tags/\" + key5.replace(/~/g, \"~0\").replace(/\\//g, \"~1\") + \"/description\",\n                                                    schemaPath: \"#/definitions/TagDefinition/properties/description/type\",\n                                                    keyword: \"type\",\n                                                    params: {\n                                                      type: \"string\"\n                                                    },\n                                                    message: \"must be string\"\n                                                  }];\n                                                  return false;\n                                                }\n                                              }\n\n                                              var valid12 = _errs41 === errors;\n                                            } else {\n                                              var valid12 = true;\n                                            }\n                                          }\n                                        }\n                                      }\n                                    } else {\n                                      validate10.errors = [{\n                                        instancePath: instancePath + \"/tags/\" + key5.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                                        schemaPath: \"#/definitions/TagDefinition/type\",\n                                        keyword: \"type\",\n                                        params: {\n                                          type: \"object\"\n                                        },\n                                        message: \"must be object\"\n                                      }];\n                                      return false;\n                                    }\n                                  }\n\n                                  var valid10 = _errs35 === errors;\n\n                                  if (!valid10) {\n                                    break;\n                                  }\n                                }\n                              }\n                            }\n                          } else {\n                            validate10.errors = [{\n                              instancePath: instancePath + \"/tags\",\n                              schemaPath: \"#/properties/tags/type\",\n                              keyword: \"type\",\n                              params: {\n                                type: \"object\"\n                              },\n                              message: \"must be object\"\n                            }];\n                            return false;\n                          }\n                        }\n\n                        var valid0 = _errs29 === errors;\n                      } else {\n                        var valid0 = true;\n                      }\n\n                      if (valid0) {\n                        if (data.logoURI !== undefined) {\n                          var data16 = data.logoURI;\n                          var _errs43 = errors;\n\n                          if (errors === _errs43) {\n                            if (errors === _errs43) {\n                              if (typeof data16 === \"string\") {\n                                if (!formats2(data16)) {\n                                  validate10.errors = [{\n                                    instancePath: instancePath + \"/logoURI\",\n                                    schemaPath: \"#/properties/logoURI/format\",\n                                    keyword: \"format\",\n                                    params: {\n                                      format: \"uri\"\n                                    },\n                                    message: \"must match format \\\"\" + \"uri\" + \"\\\"\"\n                                  }];\n                                  return false;\n                                }\n                              } else {\n                                validate10.errors = [{\n                                  instancePath: instancePath + \"/logoURI\",\n                                  schemaPath: \"#/properties/logoURI/type\",\n                                  keyword: \"type\",\n                                  params: {\n                                    type: \"string\"\n                                  },\n                                  message: \"must be string\"\n                                }];\n                                return false;\n                              }\n                            }\n                          }\n\n                          var valid0 = _errs43 === errors;\n                        } else {\n                          var valid0 = true;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } else {\n      validate10.errors = [{\n        instancePath: instancePath,\n        schemaPath: \"#/type\",\n        keyword: \"type\",\n        params: {\n          type: \"object\"\n        },\n        message: \"must be object\"\n      }];\n      return false;\n    }\n  }\n\n  validate10.errors = vErrors;\n  return errors === 0;\n}\n\nexport { validate10 as default, validate };\n","import type {Format, FormatDefinition} from \"ajv\"\nimport type {FormatValidator, FormatCompare} from \"ajv/dist/types\"\n\nexport type FormatMode = \"fast\" | \"full\"\n\nexport type FormatName =\n  | \"date\"\n  | \"time\"\n  | \"date-time\"\n  | \"duration\"\n  | \"uri\"\n  | \"uri-reference\"\n  | \"uri-template\"\n  | \"url\"\n  | \"email\"\n  | \"hostname\"\n  | \"ipv4\"\n  | \"ipv6\"\n  | \"regex\"\n  | \"uuid\"\n  | \"json-pointer\"\n  | \"json-pointer-uri-fragment\"\n  | \"relative-json-pointer\"\n  | \"byte\"\n  | \"int32\"\n  | \"int64\"\n  | \"float\"\n  | \"double\"\n  | \"password\"\n  | \"binary\"\n\nexport type DefinedFormats = {\n  [key in FormatName]: Format\n}\n\nfunction fmtDef(\n  validate: RegExp | FormatValidator<string>,\n  compare: FormatCompare<string>\n): FormatDefinition<string> {\n  return {validate, compare}\n}\n\nexport const fullFormats: DefinedFormats = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: fmtDef(date, compareDate),\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: fmtDef(time, compareTime),\n  \"date-time\": fmtDef(date_time, compareDateTime),\n  // duration: https://tools.ietf.org/html/rfc3339#appendix-A\n  duration: /^P(?!$)((\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?|(\\d+W)?)$/,\n  uri,\n  \"uri-reference\":\n    /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  \"uri-template\":\n    /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  url: /^(?:https?|ftp):\\/\\/(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)(?:\\.(?:[a-z0-9\\u{00a1}-\\u{ffff}]+-)*[a-z0-9\\u{00a1}-\\u{ffff}]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  email:\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname:\n    /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i,\n  regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  \"json-pointer\": /^(?:\\/(?:[^~/]|~0|~1)*)*$/,\n  \"json-pointer-uri-fragment\": /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  \"relative-json-pointer\": /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n  // the following formats are used by the openapi specification: https://spec.openapis.org/oas/v3.0.0#data-types\n  // byte: https://github.com/miguelmota/is-base64\n  byte,\n  // signed 32 bit integer\n  int32: {type: \"number\", validate: validateInt32},\n  // signed 64 bit integer\n  int64: {type: \"number\", validate: validateInt64},\n  // C-type float\n  float: {type: \"number\", validate: validateNumber},\n  // C-type double\n  double: {type: \"number\", validate: validateNumber},\n  // hint to the UI to hide input strings\n  password: true,\n  // unchecked string payload\n  binary: true,\n}\n\nexport const fastFormats: DefinedFormats = {\n  ...fullFormats,\n  date: fmtDef(/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/, compareDate),\n  time: fmtDef(\n    /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i,\n    compareTime\n  ),\n  \"date-time\": fmtDef(\n    /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i,\n    compareDateTime\n  ),\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/)?[^\\s]*$/i,\n  \"uri-reference\": /^(?:(?:[a-z][a-z0-9+\\-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'wilful violation')\n  email:\n    /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n}\n\nexport const formatNames = Object.keys(fullFormats) as FormatName[]\n\nfunction isLeapYear(year: number): boolean {\n  // https://tools.ietf.org/html/rfc3339#appendix-C\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)\n}\n\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nfunction date(str: string): boolean {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  const matches: string[] | null = DATE.exec(str)\n  if (!matches) return false\n  const year: number = +matches[1]\n  const month: number = +matches[2]\n  const day: number = +matches[3]\n  return (\n    month >= 1 &&\n    month <= 12 &&\n    day >= 1 &&\n    day <= (month === 2 && isLeapYear(year) ? 29 : DAYS[month])\n  )\n}\n\nfunction compareDate(d1: string, d2: string): number | undefined {\n  if (!(d1 && d2)) return undefined\n  if (d1 > d2) return 1\n  if (d1 < d2) return -1\n  return 0\n}\n\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i\n\nfunction time(str: string, withTimeZone?: boolean): boolean {\n  const matches: string[] | null = TIME.exec(str)\n  if (!matches) return false\n\n  const hour: number = +matches[1]\n  const minute: number = +matches[2]\n  const second: number = +matches[3]\n  const timeZone: string = matches[5]\n  return (\n    ((hour <= 23 && minute <= 59 && second <= 59) ||\n      (hour === 23 && minute === 59 && second === 60)) &&\n    (!withTimeZone || timeZone !== \"\")\n  )\n}\n\nfunction compareTime(t1: string, t2: string): number | undefined {\n  if (!(t1 && t2)) return undefined\n  const a1 = TIME.exec(t1)\n  const a2 = TIME.exec(t2)\n  if (!(a1 && a2)) return undefined\n  t1 = a1[1] + a1[2] + a1[3] + (a1[4] || \"\")\n  t2 = a2[1] + a2[2] + a2[3] + (a2[4] || \"\")\n  if (t1 > t2) return 1\n  if (t1 < t2) return -1\n  return 0\n}\n\nconst DATE_TIME_SEPARATOR = /t|\\s/i\nfunction date_time(str: string): boolean {\n  // http://tools.ietf.org/html/rfc3339#section-5.6\n  const dateTime: string[] = str.split(DATE_TIME_SEPARATOR)\n  return dateTime.length === 2 && date(dateTime[0]) && time(dateTime[1], true)\n}\n\nfunction compareDateTime(dt1: string, dt2: string): number | undefined {\n  if (!(dt1 && dt2)) return undefined\n  const [d1, t1] = dt1.split(DATE_TIME_SEPARATOR)\n  const [d2, t2] = dt2.split(DATE_TIME_SEPARATOR)\n  const res = compareDate(d1, d2)\n  if (res === undefined) return undefined\n  return res || compareTime(t1, t2)\n}\n\nconst NOT_URI_FRAGMENT = /\\/|:/\nconst URI =\n  /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i\n\nfunction uri(str: string): boolean {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str)\n}\n\nconst BYTE = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm\n\nfunction byte(str: string): boolean {\n  BYTE.lastIndex = 0\n  return BYTE.test(str)\n}\n\nconst MIN_INT32 = -(2 ** 31)\nconst MAX_INT32 = 2 ** 31 - 1\n\nfunction validateInt32(value: number): boolean {\n  return Number.isInteger(value) && value <= MAX_INT32 && value >= MIN_INT32\n}\n\nfunction validateInt64(value: number): boolean {\n  // JSON and javascript max Int is 2**53, so any int that passes isInteger is valid for Int64\n  return Number.isInteger(value)\n}\n\nfunction validateNumber(): boolean {\n  return true\n}\n\nconst Z_ANCHOR = /[^\\\\]\\\\Z/\nfunction regex(str: string): boolean {\n  if (Z_ANCHOR.test(str)) return false\n  try {\n    new RegExp(str)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n","// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n"],"names":["validate","validate10","func2","require","pattern0","RegExp","pattern4","pattern10","pattern11","formats0","formats2","uri","pattern1","pattern2","pattern3","validate15","data","_ref","arguments","length","undefined","_ref$instancePath","instancePath","parentData","parentDataProperty","rootData","vErrors","errors","_errs0","valid0","_errs1","_errs3","valid2","_errs4","err0","schemaPath","keyword","params","limit","message","push","err1","err2","type","_valid1","_errs6","err3","_errs8","isFinite","err4","_errs10","err5","err6","err7","validate14","_ref2","_ref2$instancePath","_ref2$rootData","_valid0","_errs12","_typeof","Array","isArray","Object","keys","key0","_errs14","err8","propertyName","err9","test","err10","pattern","err11","valid3","err12","key1","_errs18","replace","concat","err13","err14","validate13","_ref3","_ref3$instancePath","_ref3$rootData","validate12","_ref4","_ref4$instancePath","_ref4$rootData","_errs5","validate11","_ref5","_ref5$instancePath","_ref5$rootData","missing0","chainId","address","decimals","name","symbol","missingProperty","additionalProperty","data0","_errs2","isNaN","comparison","data1","data2","data3","valid1","_errs11","allowedValue","data4","_errs13","_errs15","_errs16","_errs17","logoURI","data5","format","tags","data6","_errs20","len0","i0","data7","_errs22","extensions","_errs25","_ref6","_ref6$instancePath","_ref6$rootData","timestamp","version","tokens","missing1","major","minor","patch","_errs9","tokenMap","data8","_errs19","key2","_errs21","valid4","key3","_errs24","keywords","data10","valid6","len1","i1","data11","_errs27","j0","i2","indices0","item0","i","j","data12","_errs29","key4","_errs31","valid8","key5","data13","_errs35","missing2","description","_errs38","key6","data14","_errs39","valid12","data15","_errs41","data16","_errs43","fmtDef","compare","exports","date","compareDate","time","compareTime","str","dateTime","split","DATE_TIME_SEPARATOR","compareDateTime","duration","NOT_URI_FRAGMENT","URI","url","email","hostname","ipv4","ipv6","regex","Z_ANCHOR","e","uuid","byte","BYTE","lastIndex","int32","value","Number","isInteger","MAX_INT32","MIN_INT32","int64","float","validateNumber","double","password","binary","DATE","DAYS","matches","exec","year","month","day","isLeapYear","d1","d2","TIME","withTimeZone","hour","minute","second","timeZone","t1","t2","a1","a2","dt1","dt2","res","ucs2length","len","pos","charCodeAt","code"],"sourceRoot":""}